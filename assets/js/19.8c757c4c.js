(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{384:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"php基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#php基础知识"}},[t._v("#")]),t._v(" PHP基础知识")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握PHP基本的知识点，运用基础知识实现PHP代码的数据加工处理")])]),t._v(" "),a("ul",[a("li",[t._v("变量：变量的作用和操作")]),t._v(" "),a("li",[t._v("常量：常量的作用和操作")]),t._v(" "),a("li",[t._v("PHP数据类型：数据类型的概念和应用")]),t._v(" "),a("li",[t._v("PHP运算符：运算符的作用和应用")])]),t._v(" "),a("h2",{attrs:{id:"_1、变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、变量"}},[t._v("#")]),t._v(" 1、变量")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：编程语言一定会涉及到数据加工，那么数据在程序中是如何保存的呢？")]),t._v(" "),a("p",[t._v("答案：变量")])]),t._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("PHP变量")]),t._v("：是一种能够存储数据的符号")]),t._v(" "),a("ul",[a("li",[t._v("所有的变量都是以"),a("code",[t._v("$")]),t._v("符号开始")]),t._v(" "),a("li",[t._v("变量所保存的数据都可以随意改变")]),t._v(" "),a("li",[t._v("变量必须先定义才能使用，否则报错")])]),t._v(" "),a("h3",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("需要定义变量")])]),t._v(" "),a("li",[a("p",[t._v("访问变量")])]),t._v(" "),a("li",[a("p",[t._v("修改变量")])]),t._v(" "),a("li",[a("p",[t._v("删除变量")])])]),t._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义变量：将数据值10赋值给变量$num")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问变量：输出变量的值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改变量的值：将10换成hello world")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"变量规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量规则"}},[t._v("#")]),t._v(" 变量规则")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("PHP变量以$符号开始")])]),t._v(" "),a("li",[a("p",[t._v("变量的名字由字母、下划线和数字构成，其中不能以数字开头")])]),t._v(" "),a("li",[a("p",[t._v("PHP中变量名是区分大小写的，所以$a和$A是两个变量")])]),t._v(" "),a("li",[a("p",[t._v("变量命名应该见名知意，如名字$name，年龄​$age")])]),t._v(" "),a("li",[a("p",[t._v("复杂变量名可以使用驼峰法（$serverName）或者下划线法（$server_name），推荐下划线法")])])]),t._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、PHP中变量以$符号开始")])]),t._v(" "),a("li",[a("p",[t._v("2、变量是用来保存一些可以变化的数据的：增查改删")])]),t._v(" "),a("li",[a("p",[t._v("3、变量需要先定义才能访问，否则报错：未定义的变量")])]),t._v(" "),a("li",[a("p",[t._v("4、变量的操作包含增查改删")])]),t._v(" "),a("li",[a("p",[t._v("5、PHP是一种弱类型语言，所以变量可以存储任何数据")])]),t._v(" "),a("li",[a("p",[t._v("6、变量名区分大小写")])]),t._v(" "),a("li",[a("p",[t._v("7、变量名字应该见名知意")])])]),t._v(" "),a("h2",{attrs:{id:"_2、预定义变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、预定义变量"}},[t._v("#")]),t._v(" 2、预定义变量")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：浏览器用户提交的数据我们怎么访问呢？")]),t._v(" "),a("p",[t._v("答案：预定义变量")])]),t._v(" "),a("h3",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("预定义变量")]),t._v("：PHP系统内部定义的变量，也是PHP系统自动收集的数据结果")]),t._v(" "),a("ul",[a("li",[t._v("预定义变量也是变量，符合变量规则")]),t._v(" "),a("li",[t._v("预定义变量都是数组（数据组合，有多个数据在一起）")]),t._v(" "),a("li",[t._v("系统提供了9个预定义变量，每个变量都有自己特定的数据\n"),a("ul",[a("li",[t._v("$_GET：用户通过get方式提交的数据")]),t._v(" "),a("li",[t._v("$_POST：用户通过post方式提交的数据")]),t._v(" "),a("li",[t._v("$_REQUEST：用户通过get和post提交的数据")]),t._v(" "),a("li",[t._v("$_SERVER：用户和服务器的基本信息数据（数据的名字不由开发者控制，系统定义好）")]),t._v(" "),a("li",[t._v("$_FILES：用户提交的文件数据（文件上传）")]),t._v(" "),a("li",[t._v("$_SESSION：session数据")]),t._v(" "),a("li",[t._v("$_COOKIE：cookie数据")]),t._v(" "),a("li",[t._v("$GLOBALS：所有全局变量，也是唯一一个不是以下划线开始的预定义变量")]),t._v(" "),a("li",[t._v("$_ENV：环境数据")])])])]),t._v(" "),a("h3",{attrs:{id:"步骤-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("ul",[a("li",[t._v("1、明确需要的数据在哪个预定义变量中")]),t._v(" "),a("li",[t._v("2、使用预定义变量访问")])]),t._v(" "),a("h3",{attrs:{id:"示例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-2"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#想要获取来访者的IP地址：在$_SERVER中，使用REMOTE_ADDR保存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_SERVER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'REMOTE_ADDR'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、预定义变量是PHP系统保存的一些常用变量，方便开发者使用")])]),t._v(" "),a("li",[a("p",[t._v("2、预定义变量都是数组，需要以数组方式使用")])]),t._v(" "),a("li",[a("p",[t._v("3、预定义变量不需要特别记忆，但是对于常用的有所了解")]),t._v(" "),a("ul",[a("li",[t._v("$_GET：get方式提交的数据（与表单和URL对应）")]),t._v(" "),a("li",[t._v("$_POST：post方式提交的数据（与表单对应）")]),t._v(" "),a("li",[t._v("$_SERVER：外部变量的获取，里面有很多，需要多了解一下")])])])]),t._v(" "),a("h2",{attrs:{id:"_3、变量传值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量传值"}},[t._v("#")]),t._v(" 3、变量传值")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：如何把一个变量的数据赋值给另外一个变量呢？")]),t._v(" "),a("p",[t._v("回答：变量传值")])]),t._v(" "),a("h3",{attrs:{id:"概念-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("变量传值")]),t._v("：是指有一个变量已经存在数据，然后将该变量赋值给另外一个变量")]),t._v(" "),a("ul",[a("li",[t._v("值传递：变量代表的数据传递，变量自身不受彼此影响")]),t._v(" "),a("li",[t._v("引用传递：变量代表的数据所在地址传递，一个改变会影响另外一个")])]),t._v(" "),a("h3",{attrs:{id:"步骤-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、定义变量并且赋值")])]),t._v(" "),a("li",[a("p",[t._v("2、变量传值")]),t._v(" "),a("ul",[a("li",[t._v("值传递：定义新变量，将存在的变量赋值给新变量")]),t._v(" "),a("li",[t._v("引用传递：定义新变量，将存在的变量所指向的内存地址（&）赋值给新变量")])])])]),t._v(" "),a("h3",{attrs:{id:"示例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-3"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#值传递")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将$a的值10，取出后赋值给$b，所以$b的值也是10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用传递")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将$c的值10的内存地址取出，赋值给$d，所以当前也都是10")]),t._v("\n")])])]),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("ul",[a("li",[t._v("值传递在一个变量发生改变后，另外一个变量不受影响")]),t._v(" "),a("li",[t._v("引用传递在一个变量改变后，另外一个变量跟着改变")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接上述代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#值传递")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#10，$a和$b是值传递，一个改变，另外一个还是保留原来的值，不受影响")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用传递")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#100，$c和$d是引用传递，一个改变，另外一个也跟着改变")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("ul",[a("li",[t._v("1、变量传值在开发中经常会碰到")]),t._v(" "),a("li",[t._v("2、变量传值有两种方式\n"),a("ul",[a("li",[t._v("值传递：变量的值赋值给另外一个变量，两个变量互不影响")]),t._v(" "),a("li",[t._v("引用传递：变量保存的值的地址传递一个另外一个变量，两个变量指向同一个值的内存地址，彼此影响")])])])]),t._v(" "),a("h2",{attrs:{id:"_4、常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、常量"}},[t._v("#")]),t._v(" 4、常量")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：变量可以变化，如果有些数据不希望被乱改怎么办？")]),t._v(" "),a("p",[t._v("答案：常量")])]),t._v(" "),a("h3",{attrs:{id:"概念-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-4"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("常量")]),t._v("：一种存储数据的符号")]),t._v(" "),a("ul",[a("li",[t._v("常量通常大写字母")]),t._v(" "),a("li",[t._v("常量数据一旦定义，不可改变")])]),t._v(" "),a("h3",{attrs:{id:"步骤-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-4"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1、定义常量")]),t._v(" "),a("ul",[a("li",[t._v("使用函数：define('常量名',常量值);")]),t._v(" "),a("li",[t._v("使用关键字：const 常量名 = 常量值;")])]),t._v(" "),a("p",[t._v("2、访问常量")]),t._v(" "),a("ul",[a("li",[t._v("直接访问：常量名;")]),t._v(" "),a("li",[t._v("使用函数：constant('常量名');")])]),t._v(" "),a("h3",{attrs:{id:"示例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-4"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用函数定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'VERSION'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用关键字定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#直接访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用函数访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constant")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'VERSION'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"常量规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量规则"}},[t._v("#")]),t._v(" 常量规则")]),t._v(" "),a("p",[t._v("1、常量名字通常使用大写（允许小写，但是程序员默认都使用大写）")]),t._v(" "),a("p",[t._v("2、名字由字母、下划线和数字组成，不能以数字开头")]),t._v(" "),a("p",[t._v("3、常量名定义应该做到见名知意")]),t._v(" "),a("p",[t._v("4、复杂常量名通常使用下划线法")]),t._v(" "),a("p",[t._v("5、常量名字可以比较松散，但是不建议使用，如define('-_-','笑脸')是系统允许的（访问时就必须使用函数访问）")]),t._v(" "),a("h3",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("p",[t._v("1、PHP7以后常量允许定义数组常量（一次性定义多个常量），访问时使用数组下标访问")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数组常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MATH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'PI'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'E'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.72")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MATH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'PI'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、常量是用来保留一些不希望改变的数据的")]),t._v(" "),a("p",[t._v("2、常量使用函数define或者关键字const定义，二者有些区别，在后面学习的时候会遇到")]),t._v(" "),a("p",[t._v("3、常量在定义后只能访问，不能修改和删除")]),t._v(" "),a("p",[t._v("4、PHP常量在PHP7以后允许值为数组")]),t._v(" "),a("h2",{attrs:{id:"_5、系统常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、系统常量"}},[t._v("#")]),t._v(" 5、系统常量")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：系统内部有没有像预定义变量那样的预定义常量呢？")]),t._v(" "),a("p",[t._v("回答：有，系统常量")])]),t._v(" "),a("h3",{attrs:{id:"概念-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-5"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("系统常量")]),t._v("：系统内部定义的常量，用户可以直接访问，也只能访问")]),t._v(" "),a("ul",[a("li",[t._v("固定系统常量：值是固定的")]),t._v(" "),a("li",[t._v("魔术常量：值是可变的")])]),t._v(" "),a("h3",{attrs:{id:"常用系统常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用系统常量"}},[t._v("#")]),t._v(" 常用系统常量")]),t._v(" "),a("h4",{attrs:{id:"固定系统常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#固定系统常量"}},[t._v("#")]),t._v(" 固定系统常量")]),t._v(" "),a("ul",[a("li",[t._v("PHP_VERSION：PHP版本号")]),t._v(" "),a("li",[t._v("PHP_INT_SIZE：PHP中整数所占用的字节数")]),t._v(" "),a("li",[t._v("PHP_INT_MAX：PHP中整数能表示的最大数")])]),t._v(" "),a("h4",{attrs:{id:"魔术常量-以双下划线-开始-也以双下划线-结束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#魔术常量-以双下划线-开始-也以双下划线-结束"}},[t._v("#")]),t._v(" 魔术常量：以双下划线"),a("code",[t._v("__")]),t._v("开始，也以双下划线"),a("code",[t._v("__")]),t._v("结束")]),t._v(" "),a("ul",[a("li",[t._v("__DIR__：当前运行文件的所在绝对路径（directory）")]),t._v(" "),a("li",[t._v("__FILE__：当前运行文件的绝对路径（带文件名）")]),t._v(" "),a("li",[t._v("__LINE__：当前代码所在的行号")]),t._v(" "),a("li",[a("em",[t._v("_FUNCTION")]),t._v("_：函数内部使用，表示当前函数的名字")]),t._v(" "),a("li",[a("em",[t._v("_CLASS")]),t._v("_：类内部方法里使用，表示当前类的名字")]),t._v(" "),a("li",[a("em",[t._v("_METHOD")]),t._v("_：类内部方法里使用，表示当前方法的名字（带类名）")]),t._v(" "),a("li",[a("em",[t._v("_NAMESPACE")]),t._v("_：当前所属命名空间的名字")])]),t._v(" "),a("h3",{attrs:{id:"示例-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-5"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#固定常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#7.2.4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_INT_SIZE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_INT_MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#魔术常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__DIR__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FILE__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__LINE__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-5"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、系统内部为我们定义了很多常量")]),t._v(" "),a("ul",[a("li",[t._v("固定常量：值是不变的")]),t._v(" "),a("li",[t._v("魔术常量：值是不确定的（性质确定）")])]),t._v(" "),a("p",[t._v("2、魔术常量在开发时很有用")]),t._v(" "),a("h2",{attrs:{id:"_6、数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、数据类型"}},[t._v("#")]),t._v(" 6、数据类型")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：PHP变量赋值的时候有的地方有引号，有的不需要引号，为什么呢？")]),t._v(" "),a("p",[t._v("回答：数据类型")])]),t._v(" "),a("h3",{attrs:{id:"概念-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-6"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("数据类型")]),t._v("：数据类型在数据结构中的定义是一组"),a("strong",[t._v("性质相同的值的集合")]),t._v("以及定义在这个值集合上的一组操作的总称。")]),t._v(" "),a("ul",[a("li",[t._v("PHP变量没有数据类型：弱类型，可以存储任何数据")]),t._v(" "),a("li",[t._v("只有数据是进行分类的")])]),t._v(" "),a("p",[t._v("PHP中数据类型分为三大类八小类")]),t._v(" "),a("ul",[a("li",[t._v("基本数据类型\n"),a("ul",[a("li",[t._v("整形（int/integer)：整数数据")]),t._v(" "),a("li",[t._v("浮点型(float)：小数数据和超过整形范围的整数数据")]),t._v(" "),a("li",[t._v("布尔型(bool/boolean)：布尔类型数据，只有true和false两个值")]),t._v(" "),a("li",[t._v("字符串型(string)：字符串数据（最常见）")])])]),t._v(" "),a("li",[t._v("复合数据类型\n"),a("ul",[a("li",[t._v("数组型(array)：数组数据（即多个数据存放到一个变量中）")]),t._v(" "),a("li",[t._v("对象型(object)：对象数据，由类实例化得到（面向对象）")])])]),t._v(" "),a("li",[t._v("特殊数据类型\n"),a("ul",[a("li",[t._v("资源型(resource)：资源数据（数据库资源\\文件资源）")]),t._v(" "),a("li",[t._v("空型(null)：没有存储任何数据")])])])]),t._v(" "),a("h3",{attrs:{id:"示例-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-6"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[t._v("利用var_dump()可以查看变量的详细情况：数据大小（或长度），数据类型")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#多个可以一起（var_dump通常在开发阶段用来检查结果的正确性）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印结果：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#int(100) \t\t\t#int类型，值为100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#string(5) "hello"\t#string类型，长度为5个字节，值为hello')]),t._v("\n")])])]),a("h3",{attrs:{id:"小结-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-6"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、数据分类是根据数据的性质的同一性进行分类")]),t._v(" "),a("p",[t._v("2、PHP中将数据分成8类")]),t._v(" "),a("ul",[a("li",[t._v("整型：整数")]),t._v(" "),a("li",[t._v("浮点型：小数和超出整数范围的整数")]),t._v(" "),a("li",[t._v("布尔型：是和否")]),t._v(" "),a("li",[t._v("字符串型：字符串数据")]),t._v(" "),a("li",[t._v("数组型：数组数据")]),t._v(" "),a("li",[t._v("对象型：对象数据")]),t._v(" "),a("li",[t._v("资源型：资源数据")]),t._v(" "),a("li",[t._v("空型：没有数据")])]),t._v(" "),a("p",[t._v("3、可以使用var_dump来查看数据的具体类型和结果详情")]),t._v(" "),a("p",[t._v("4、对象型、资源型和空型需要学习到一些高级知识时会碰到，暂时不细讲")]),t._v(" "),a("h3",{attrs:{id:"_6-1、整型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、整型"}},[t._v("#")]),t._v(" 6.1、整型")]),t._v(" "),a("h4",{attrs:{id:"概念-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-7"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("整型")]),t._v("：数据是整数，但是根据进制方式不同，有不同的数据格式")]),t._v(" "),a("ul",[a("li",[t._v("十进制：默认，逢十进一，有0-9共十个符号，阿拉伯数字即可，如123")]),t._v(" "),a("li",[t._v("八进制：逢八进一，有0-7共八个符号，起始使用0标志，如0123")]),t._v(" "),a("li",[t._v("十六进制：逢十六进一，有0-9、a-f共16个符号，起始使用0x标志，如0x123")]),t._v(" "),a("li",[t._v("二进制：逢二进一，有0-1共两个符号，起始使用0b标志，如0b101")])]),t._v(" "),a("h4",{attrs:{id:"示例-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-7"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#整型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认十进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#八进制表示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#十六进制表示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#二进制表示")]),t._v("\n")])])]),a("p",[t._v("虽然定义数据的时候可以使用多种进制表示，但是显示数据的时候，默认PHP都会转换成10进制输出")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接上述代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#123,83,291,5")]),t._v("\n")])])]),a("p",[t._v("如果想要保持原来的进制输出，就需要使用printf(格式,数据1,数据2...)来实现")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#接上述代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'%d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#十进制输出$int1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'%o'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#八进制输出$int2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'十六进制是%x,二进制是%b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$int4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意：整数最大保存空间为PHP_INT_SIZE的值，即8个字节（PHP7以前是4个字节），能表示的最大值是PHP_INT_MAX的值，最小值是PHP_INT_MAX + 1的负数（PHP支持正负数）")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_INT_SIZE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_INT_MAX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 9223372036854775807，最小值是 -9223372036854775808")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-7"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、整型就是保存的是整数")]),t._v(" "),a("p",[t._v("2、整数的形式有多种，有不同的定义方式：")]),t._v(" "),a("ul",[a("li",[t._v("十进制：直接0-9定义")]),t._v(" "),a("li",[t._v("八进制：前面使用0，后跟0-7")]),t._v(" "),a("li",[t._v("十六进制：前面使用0x，后跟0-9+a-f")]),t._v(" "),a("li",[t._v("二进制：前面使用0b，后跟0-1")])]),t._v(" "),a("p",[t._v("3、PHP不管定义时采用的是什么整型，输出都默认转换成十进制")]),t._v(" "),a("p",[t._v("4、想要保留原来格式，或者指定格式输出整数，使用printf()")]),t._v(" "),a("ul",[a("li",[t._v("十进制：%d")]),t._v(" "),a("li",[t._v("八进制：%o")]),t._v(" "),a("li",[t._v("十六进制：%x")]),t._v(" "),a("li",[t._v("二进制：%b")])]),t._v(" "),a("p",[t._v("5、PHP中整型是有符号类型（有正负）")]),t._v(" "),a("ul",[a("li",[t._v("最大值：PHP_INT_MAX")]),t._v(" "),a("li",[t._v("最小值：-PHP_INT_MAX - 1")])]),t._v(" "),a("h3",{attrs:{id:"_6-2、进制转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、进制转换"}},[t._v("#")]),t._v(" 6.2、进制转换")]),t._v(" "),a("h4",{attrs:{id:"概念-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-8"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("进制转换")]),t._v("：是指根据不同的进制要求，将原始数值（通常指整数）转换成目标进制。")]),t._v(" "),a("ul",[a("li",[t._v("二进制与十进制互转")]),t._v(" "),a("li",[t._v("二进制与八进制互转")]),t._v(" "),a("li",[t._v("二进制与十六进制互转")]),t._v(" "),a("li",[t._v("八进制与十进制互转")]),t._v(" "),a("li",[t._v("八进制与十六进制互转")]),t._v(" "),a("li",[t._v("十进制与十六进制互转")])]),t._v(" "),a("h4",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("任意进制转十进制的通用方法")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6.gif",alt:"其他进制转十进制"}})]),t._v(" "),a("p",[t._v("二进制转八进制或者十六进制")]),t._v(" "),a("ul",[a("li",[t._v("二进制转八进制：从右边开始依次取三位转换成十进制，将所有结果合并即可（三位二进制最大7：111=>7）")])]),t._v(" "),a("p",[a("code",[t._v("11111111")]),t._v(" => "),a("code",[t._v("11,111,111")]),t._v(" => "),a("code",[t._v("3,7,7")]),t._v(" => 377")]),t._v(" "),a("ul",[a("li",[t._v("二进制转十六进制：从右边开始依次取四位转换成十进制，将所有结果合并即可（四位二进制最大15：1111=>15 == F）")])]),t._v(" "),a("p",[a("code",[t._v("11111111")]),t._v(" => "),a("code",[t._v("1111,1111")]),t._v(" => "),a("code",[t._v("F,F")]),t._v(" => FF")]),t._v(" "),a("ul",[a("li",[t._v("八进制转二进制：每位数转换成三位的二进制，将所有结果合并即可")])]),t._v(" "),a("p",[a("code",[t._v("123")]),t._v(" => "),a("code",[t._v("1,2,3")]),t._v(" => "),a("code",[t._v("001,010,011")]),t._v(" => 00101011 => 101011（左侧的0可以忽略）")]),t._v(" "),a("ul",[a("li",[t._v("十六进制转二进制：每位数转换成四位的二进制，将所有结果合并即可")])]),t._v(" "),a("p",[a("code",[t._v("123")]),t._v(" => "),a("code",[t._v("1,2,3")]),t._v(" => "),a("code",[t._v("0001,0010,0011")]),t._v(" => 000100100011 => 100100011")]),t._v(" "),a("h4",{attrs:{id:"简化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简化"}},[t._v("#")]),t._v(" 简化")]),t._v(" "),a("p",[t._v("在PHP中，已经考虑到业务的需求，所以PHP提供了一系列函数来实现各类进制转换，以十进制为基准")]),t._v(" "),a("ul",[a("li",[t._v("bindec：二进制转十进制")]),t._v(" "),a("li",[t._v("decbin：十进制转二进制")]),t._v(" "),a("li",[t._v("decoct：十进制转八进制")]),t._v(" "),a("li",[t._v("octdec：八进制转十进制")]),t._v(" "),a("li",[t._v("dechex：十进制转十六进制")]),t._v(" "),a("li",[t._v("hexdec：十六进制转十进制")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#示例：十六进制转十进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hexdec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'123'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#结果：291")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-8"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、进制转换原理可以以10进制为基准互转")]),t._v(" "),a("p",[t._v("2、PHP提供了一套以十进制为基准的转换函数，利用十进制与其他进制组合成单词即可实现函数转换")]),t._v(" "),a("ul",[a("li",[t._v("八进制：oct")]),t._v(" "),a("li",[t._v("十进制：dec")]),t._v(" "),a("li",[t._v("十六进制：hex")]),t._v(" "),a("li",[t._v("二进制：bin")])]),t._v(" "),a("h3",{attrs:{id:"_6-3、浮点型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3、浮点型"}},[t._v("#")]),t._v(" 6.3、浮点型")]),t._v(" "),a("h4",{attrs:{id:"概念-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-9"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("浮点数")]),t._v("：即有小数点的数或者数值超过整型能表达的最大数")]),t._v(" "),a("ul",[a("li",[t._v("小数：1.2或者0.12")]),t._v(" "),a("li",[t._v("科学计数法产生的数：4E3 == 4 * 10 ^ 3")]),t._v(" "),a("li",[t._v("超过整型的数： PHP_INT_MAX + 1")]),t._v(" "),a("li",[t._v("浮点型存储空间：8个字节")])]),t._v(" "),a("p",[t._v("浮点数是有有效位的")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("精度")]),t._v(" ==> 精确度")]),t._v(" "),a("li",[t._v("PHP7中的有效精度是13-14位，即数据如果有效数字超过该值，就会自动被四舍五入\n"),a("ul",[a("li",[t._v("13位：肯定精准")]),t._v(" "),a("li",[t._v("14位：如果只有14位数字，那么精准；如果超出14位，第十四位是四舍五入的结果")])])]),t._v(" "),a("li",[t._v("PHP7中浮点数最大表示：1.8e308")])]),t._v(" "),a("h4",{attrs:{id:"示例-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-8"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下都是浮点数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4e5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PHP_INT_MAX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"浮点数存储原理简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点数存储原理简介"}},[t._v("#")]),t._v(" 浮点数存储原理简介")]),t._v(" "),a("p",[t._v("浮点数分为整数部分和小数部分，转换成二进制的方式有所不同，10.5举例")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("整数部分：十进制转二进制正常转即可，如10 => 1010")])]),t._v(" "),a("li",[a("p",[t._v("小数部分：小数乘以2，取整数部分，如 0.5 * 2 = 1.0，取1（如果还可以取，继续乘以2）")])]),t._v(" "),a("li",[a("p",[t._v("浮点数一共用8个字节存储，即64位，其中")]),t._v(" "),a("ul",[a("li",[t._v("最左侧第一位是符号位：0表示正数，1表示负数")]),t._v(" "),a("li",[t._v("从左侧开始第2位-54位存储数值")]),t._v(" "),a("li",[t._v("剩余9位存储幂：即10的N次方，N最大为308")])])])]),t._v(" "),a("h4",{attrs:{id:"扩展-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展-2"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("p",[t._v("1、浮点数适合运用在精度要求不高的地方（如果确定精度不会超过14位，那么浮点数是精准的）")]),t._v(" "),a("p",[t._v("2、浮点数不适合进行运算后的精确比较（因为小数部分转换成二进制的时候是*2的出来的，取不尽就会丢失精度）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("3")]),t._v("  与 "),a("code",[t._v("8.1 / 2.7")]),t._v(" 比较，计算机是不会算出相等的结果的")])]),t._v(" "),a("h4",{attrs:{id:"小结-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-9"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、浮点数是用来表示小数、科学计数法数以及超过整数大小的整数的")]),t._v(" "),a("p",[t._v("2、浮点数是有精度范围的，PHP7中精度为14位有效数字")]),t._v(" "),a("p",[t._v("3、浮点数采用8个字节存储：存储原理为： "),a("code",[t._v("符号位")]),t._v(" + "),a("code",[t._v("54位数值位")]),t._v(" + "),a("code",[t._v("9位指数位")])]),t._v(" "),a("p",[t._v("4、浮点数的应用不建议在精度要求较高（超过14位）的地方使用")]),t._v(" "),a("p",[t._v("5、浮点数不适合进行精确比较（浮点数运算结果）")]),t._v(" "),a("h3",{attrs:{id:"_6-4、布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4、布尔类型"}},[t._v("#")]),t._v(" 6.4、布尔类型")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：程序中如何表达==行==和==不行==呢？")]),t._v(" "),a("p",[t._v("回答：布尔值")])]),t._v(" "),a("h4",{attrs:{id:"概念-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-10"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("布尔类型")]),t._v("：专门用来做判定结果的，只有两个值")]),t._v(" "),a("ul",[a("li",[t._v("true：表示真（是）")]),t._v(" "),a("li",[t._v("false：表示假（false）")])]),t._v(" "),a("h4",{attrs:{id:"示例-9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-9"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#布尔表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("FALSE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP中不区分布尔的大小写")]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：布尔值通常不会用来做结果保存，而是用来进行过程判定")]),t._v(" "),a("h4",{attrs:{id:"小结-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-10"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、布尔类型只有两个值：true和false")]),t._v(" "),a("p",[t._v("2、布尔值不区分大小写：true和TRUE一样")]),t._v(" "),a("p",[t._v("3、布尔类型通常不是用来做存储数据，而是程序用来进行过程或者结果判定使用")]),t._v(" "),a("h3",{attrs:{id:"_6-5、字符串型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5、字符串型"}},[t._v("#")]),t._v(" 6.5、字符串型")]),t._v(" "),a("h4",{attrs:{id:"概念-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-11"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("字符串")]),t._v("：字符串是由数字、字母和下划线组成的一串字符")]),t._v(" "),a("p",[t._v("字符串是编程中用到最多的数据格式，有多种定义方式：")]),t._v(" "),a("ul",[a("li",[t._v("单引号包裹：使用英文单引号"),a("code",[t._v("''")]),t._v("包裹字符")]),t._v(" "),a("li",[t._v("双引号包裹：使用英文双引号"),a("code",[t._v('""')]),t._v("包裹字符")]),t._v(" "),a("li",[t._v("定界符包裹：使用PHP中的定界符"),a("code",[t._v("<<<标识符")]),t._v(" +"),a("code",[t._v("标识符")]),t._v("结尾形式包裹（多行字符串的一种形式）\n"),a("ul",[a("li",[t._v("heredoc结构：双引号的一种多行字符串形式")]),t._v(" "),a("li",[t._v("nowdoc结构：单引号的一种多行字符串形式")])])])]),t._v(" "),a("h4",{attrs:{id:"示例-10"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-10"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单引号字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#双引号字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定界符：heredoc：注意EOT并非固定，自己取名即可（但不要与关键字同名）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string heredoc-string"}},[a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<<<")]),t._v("EOT")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str1")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[t._v("EOT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：hello world")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定界符：nowdoc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string nowdoc-string"}},[a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<<<'")]),t._v("EOT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v("\n\t$str1\n"),a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[t._v("EOT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：$str1")]),t._v("\n")])])]),a("h4",{attrs:{id:"区别-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别-2"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("p",[t._v("1、单引号是最简单字符串")]),t._v(" "),a("ul",[a("li",[t._v("里面能解析少量转义符：单引号（'），反斜杠（\\\\）")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单引号解析")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'abcdefg\\r\\n\\t\\'\\\"\\\\$a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：abcdefg\\r\\n\\t'\\\"\\$a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单引号被解析'，反斜杠被解析\\，其他均不解析")]),t._v("\n")])])]),a("p",[t._v("2、双引号相对单引号功能较多")]),t._v(" "),a("ul",[a("li",[t._v('里面能解释较多转义符：$符号（\\$），双引号（"），反斜杠（\\\\），回车换行符（\\r\\n），tap符（\\t）')]),t._v(" "),a("li",[t._v("里面如果有PHP变量，也可以被解析")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#双引号解析")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"abcdefg\\r\\n\\t\\\'\\"\\\\$a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：abcdefg  \\'\"\\100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\\r\\n转换成换行空格，单引号不解析\\'，双引号解析\"，反斜杠解析\\，$a被解析100")]),t._v("\n")])])]),a("p",[t._v("3、定界符中heredoc与双引号效果一致，nowdoc与单引号一致")]),t._v(" "),a("ul",[a("li",[t._v("定界符会自动保留格式：即如果内部字符串有换行之类的会自动保留")])]),t._v(" "),a("p",[a("strong",[t._v("注意")])]),t._v(" "),a("p",[t._v("1、双引号解析变量时，系统是有规矩匹配变量的")]),t._v(" "),a("ul",[a("li",[t._v('变量名不要与其他字母或者数字保留在一起：如"$abc"系统会自动识别​$abc，而不是$a\n'),a("ul",[a("li",[t._v('解决方案1：让变量与后面的内容之间有空格，如"$a bc"系统识别$a（此时会额外多出一个空格）')]),t._v(" "),a("li",[t._v('解决方案2：使用{}将变量独立包裹，如"{$a}bc"系统识别$a（建议）')])])])]),t._v(" "),a("p",[t._v("2、使用定界符定义多行字符串时有很多规矩")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("定界符内的所有内容都是字符串的内容（包括注释）")])]),t._v(" "),a("li",[a("p",[t._v("定界符的起始符号之后不能有任何信息，包括空格")])]),t._v(" "),a("li",[a("p",[t._v("定界符的结束符号必须顶格")])]),t._v(" "),a("li",[a("p",[t._v("定界符的结束符号后同样不能有任何信息")])])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误示范1：定界符起始符号后有内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这是起始")]),t._v("\n\thello world\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误示范2：定界符结束符号不顶格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string heredoc-string"}},[a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<<<")]),t._v("EOT")]),t._v("\n\thello world\n\tEOT;\n\n#错误示范3：定界符结束符号后有内容\n"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")])]),t._v(" = <<<EOT\n\thello world\n"),a("span",{pre:!0,attrs:{class:"token delimiter symbol"}},[t._v("EOT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#字符串结束")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-11"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、字符串是程序编码中应用最多的一种类型，可以使用多种方式定义")]),t._v(" "),a("ul",[a("li",[t._v("单引号定义")]),t._v(" "),a("li",[t._v("双引号定义")]),t._v(" "),a("li",[t._v("定界符定义\n"),a("ul",[a("li",[t._v("heredoc定义：代替双引号")]),t._v(" "),a("li",[t._v("nowdoc定义：代替单引号")])])])]),t._v(" "),a("p",[t._v("2、单引号与双引号有区别")]),t._v(" "),a("ul",[a("li",[t._v("单引号解析的转义符号较少：'和\\\\")]),t._v(" "),a("li",[t._v('双引号解析的转义符号较多："、\\\\、\\r\\n、\\t、\\$')]),t._v(" "),a("li",[t._v("双引号中可以解析变量，但要注意变量的规则\n"),a("ul",[a("li",[t._v("让变量名与其他可能让系统误解的符号分开")]),t._v(" "),a("li",[t._v("给变量名增加一个{}")])])])]),t._v(" "),a("p",[t._v("3、使用定界符的时候要注意定界符的严格要求")]),t._v(" "),a("ul",[a("li",[t._v("起始符号后不能有任何内容（包括空格）")]),t._v(" "),a("li",[t._v("结束符号必须顶格")]),t._v(" "),a("li",[t._v("结束符号后不能有任何内容")])]),t._v(" "),a("h3",{attrs:{id:"_6-6、数组类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6、数组类型"}},[t._v("#")]),t._v(" 6.6、数组类型")]),t._v(" "),a("h4",{attrs:{id:"举例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例子"}},[t._v("#")]),t._v(" 举例子")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E6%95%B0%E7%BB%84%E6%A6%82%E5%BF%B5.gif",alt:"数组概念"}})]),t._v(" "),a("blockquote",[a("p",[t._v("提问：一个PHP变量中能不能保存多个数据呢？")]),t._v(" "),a("p",[t._v("回答：可以，"),a("strong",[t._v("数组")])])]),t._v(" "),a("h4",{attrs:{id:"概念-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-12"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("数组")]),t._v("：多个元素的序列组合")]),t._v(" "),a("ul",[a("li",[t._v("数组由元素组成")]),t._v(" "),a("li",[t._v("元素由下标key和值Value组成（键值对 键 => 值）\n"),a("ul",[a("li",[t._v("如果元素下标都是数字：索引数组")]),t._v(" "),a("li",[t._v("如果元素下标都是字符串：关联数组")]),t._v(" "),a("li",[t._v("如果下标有数字也有字符串：混合数组")])])]),t._v(" "),a("li",[t._v("数组元素的访问需要通过下标实现")]),t._v(" "),a("li",[t._v("数组通常用来保存一组相关的数据，而不是随意搭配")])]),t._v(" "),a("h4",{attrs:{id:"步骤-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-5"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1、定义数组")]),t._v(" "),a("ul",[a("li",[t._v("空数组：值为array()或者[]")]),t._v(" "),a("li",[t._v("非空数组：['张三']（只显示的放了值，下标键是自动生成）")]),t._v(" "),a("li",[t._v("多元素数组：使用逗号分隔元素['张三','男',30]")]),t._v(" "),a("li",[t._v("指定下标数组：['name' => '张三','gender' => '男', 'age' => '30']")])]),t._v(" "),a("p",[t._v("2、添加元素")]),t._v(" "),a("ul",[a("li",[t._v("使用保存数组的变量后加上[]，表示一个系统自动指定下标，然后等于某个值")]),t._v(" "),a("li",[t._v("使用保存数组的变量后加上[1]，表示指定下标为1（可以是字符串），然后等于某个值")])]),t._v(" "),a("p",[t._v("3、访问元素")]),t._v(" "),a("ul",[a("li",[t._v("通过变量后加上[1]，必须指定元素下标，访问某个元素")]),t._v(" "),a("li",[t._v("如果直接使用变量，表示访问整个数组（不能echo输出）")])]),t._v(" "),a("p",[t._v("4、修改元素")]),t._v(" "),a("ul",[a("li",[t._v("通过数组变量加上[1]，修改指定下标对应的元素，等于某个新值即可")])]),t._v(" "),a("p",[t._v("5、删除元素")]),t._v(" "),a("ul",[a("li",[t._v("使用unset()，然后指定数组变量加上[1]，删除指定下标")]),t._v(" "),a("li",[t._v("使用unset()，指定变量删除整个数组")])]),t._v(" "),a("h4",{attrs:{id:"示例-11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-11"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数组：空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义非空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#多个元素：没有指定下标，下标从0开始自然增长")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'张三'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定下标，下标可以是数字也可以是字符串")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加一个元素值为10，下标系统自动给（第一个元素是0）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'gender'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'女'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加一个元素下标为gender，值为女")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#张三")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#张三")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'王五'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删掉 男 这个元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除整个数组")]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：")]),t._v(" "),a("p",[t._v("1、索引数组（纯数字下标）添加元素，默认以当前元素最大的下标开始自动加1")]),t._v(" "),a("p",[t._v("2、索引数组通常都不会刻意指定下标（从0开始自增长）")]),t._v(" "),a("p",[t._v("3、一般数组很少使用混合数组（要么下标全数字，要么下标全字符串）")]),t._v(" "),a("p",[t._v("4、PHP数组特点")]),t._v(" "),a("ul",[a("li",[t._v("PHP数组中的元素没有数量限制，即数组不限定长度")]),t._v(" "),a("li",[t._v("PHP中数组可以动态增加元素")]),t._v(" "),a("li",[t._v("PHP中数组元素的值可以是任意数据类型")]),t._v(" "),a("li",[t._v("PHP中数组下标可以是纯数字（索引数组）、纯字符串（关联数组）和混合数字和字符串（混合数组）")])]),t._v(" "),a("h4",{attrs:{id:"小结-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-12"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、数组是多个数据元素的集合保存")]),t._v(" "),a("p",[t._v("2、数组元素由下标和值组成，下标可以是数字或者字符串，值可以是任意数据类型")]),t._v(" "),a("p",[t._v("3、一个数组通常存储的是一组相关数据，如个人信息")]),t._v(" "),a("p",[t._v("4、数组的定义方式有多种")]),t._v(" "),a("ul",[a("li",[t._v("空数组：$arr = array() / $arr = []")]),t._v(" "),a("li",[t._v("有元素：$arr = [1] / $arr = ['name' => '习大大']")])]),t._v(" "),a("p",[t._v("5、数组元素的访问、修改和删除，都是通过数组下标实现")]),t._v(" "),a("p",[t._v("6、PHP中数组根据下标组成可以分为多种")]),t._v(" "),a("ul",[a("li",[t._v("索引数组：所有元素下标全是数字")]),t._v(" "),a("li",[t._v("关联数组：所有元素下标全是字符串")]),t._v(" "),a("li",[t._v("混合数组：元素下标有数字的也有字符串的（基本不使用）")])]),t._v(" "),a("h3",{attrs:{id:"_6-7、二维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7、二维数组"}},[t._v("#")]),t._v(" 6.7、二维数组")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：一个数组是用来保存一类相关信息的，那么如果有很多个具有很多信息的数据该如何存储呢？")]),t._v(" "),a("p",[t._v("答案：二维数组")])]),t._v(" "),a("h4",{attrs:{id:"概念-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-13"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("二维数组")]),t._v("：数组中的元素本身也是一个数组，我们就称之为二维数组")]),t._v(" "),a("ul",[a("li",[t._v("二维数组的元素都是一个一维数组")]),t._v(" "),a("li",[t._v("二维数组的第一维的下标通常是索引，第二维是关联")])]),t._v(" "),a("p",[a("strong",[t._v("多维数组")]),t._v("：PHP中理论上不限定数组的层级，当数组元素本身又是一个二维数组的时候，就是多维数组")]),t._v(" "),a("ul",[a("li",[t._v("数组维度超过二层即可为多维数组")])]),t._v(" "),a("h4",{attrs:{id:"步骤-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-6"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1、定义一维数组，保存到变量")]),t._v(" "),a("p",[t._v("2、定义一个新数组，将原来的数组保存到新数组元素中")]),t._v(" "),a("p",[t._v("3、数组访问先通过一维下标找到对应的元素，然后通过二维下标找到更深的元素")]),t._v(" "),a("h4",{attrs:{id:"示例-12"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-12"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义一维数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'鸣人'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'skill'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'影分身'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'佐助'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'skill'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'千鸟'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义二维数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$p1元素的下标为0，$p2的下标为1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#访问元素：通常是访问二维元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取第一个元素的名字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#追加一个数组元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'小樱'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'skill'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'治疗术'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-13"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、二维数组就是数组中的元素都是一维数组")]),t._v(" "),a("p",[t._v("2、多维数组在PHP中也允许出现，就是数组的层级大于3层，但是尽量不要超过3层（效率低）")]),t._v(" "),a("p",[t._v("3、二维数组的存储形式通常规则如下")]),t._v(" "),a("ul",[a("li",[t._v("一维数组元素下标为数字（索引数组：外层）")]),t._v(" "),a("li",[t._v("二维数组元素下标为字符串（关联数组：内层）")])]),t._v(" "),a("p",[t._v("4、不管数组有多少层，所有的访问都是以下标一层一层寻找：$变量[一层下标][二层下标][...N层下标]")]),t._v(" "),a("h3",{attrs:{id:"_6-8、类型判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8、类型判定"}},[t._v("#")]),t._v(" 6.8、类型判定")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：PHP在进行数据操作的时候，需要用到某些特定类型的数据，PHP如何知道呢？")]),t._v(" "),a("p",[t._v("回答：类型判定")])]),t._v(" "),a("h4",{attrs:{id:"概念-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-14"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("类型判定")]),t._v("：即对存储数据的变量（本质是数据）进行类型确定")]),t._v(" "),a("p",[t._v("PHP提供了一套类型判定的函数，以供使用")]),t._v(" "),a("ul",[a("li",[t._v("函数不需要拼命记住，都是以"),a("code",[t._v("is_")]),t._v(" + "),a("code",[t._v("数据类型")]),t._v(" 组成")]),t._v(" "),a("li",[t._v("函数在操作手册中都有，输入"),a("code",[t._v("is_")]),t._v(" 即可查到所有")])]),t._v(" "),a("h4",{attrs:{id:"常用类型判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用类型判定"}},[t._v("#")]),t._v(" 常用类型判定")]),t._v(" "),a("p",[t._v("系统提供的类型判定很全，有几个特殊的需要了解一下")]),t._v(" "),a("ul",[a("li",[t._v("is_numeric：判定数据是否是数值，如果是返回布尔TURE，否则返回FALSE")]),t._v(" "),a("li",[t._v("is_scalar：是否是标量（基础类型）数据，如果是返回布尔TRUE，否则返回FALSE")]),t._v(" "),a("li",[t._v("类型代表：is_int，判定是否是整型数据，如果是返回布尔TRUE，否则返回FALSE")])]),t._v(" "),a("h4",{attrs:{id:"示例-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-13"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'100'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#TURE，100是整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#FALSE，虽然值是100，但是用引号包裹的是字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_numeric")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#TRUE，is_numeric只要是数值都可以，包括数值型字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_scalar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#TRUE，100是整型，是基础类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_scalar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#TRUE，'100'是字符串，是基础类型")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-14"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、类型判定是因为某些特定情况下，需要保证数据格式能对上")]),t._v(" "),a("ul",[a("li",[t._v("不要相信任何外来数据：保证程序的安全和逻辑完整性")])]),t._v(" "),a("p",[t._v("2、类型判定是用到PHP提供的系统函数，函数以"),a("code",[t._v("is_")]),t._v(" + "),a("code",[t._v("数据类型")])]),t._v(" "),a("ul",[a("li",[t._v("is_int：判定整型（is_integer）")]),t._v(" "),a("li",[t._v("is_float：判定浮点型")]),t._v(" "),a("li",[t._v("is_bool：判定布尔型（is_boolean）")]),t._v(" "),a("li",[t._v("is_string：判定字符串型")]),t._v(" "),a("li",[t._v("is_null：判定空型")]),t._v(" "),a("li",[t._v("is_array：判定数组型")]),t._v(" "),a("li",[t._v("is_resourse：判定资源型")]),t._v(" "),a("li",[t._v("is_object：判定对象型")])]),t._v(" "),a("p",[t._v("3、常见的数据类型判定，有两个额外的判定函数")]),t._v(" "),a("ul",[a("li",[t._v("is_numeric：判定是否是数值或者数值型字符串")]),t._v(" "),a("li",[t._v("is_scalar：判定是否是基础数据类型（整型、浮点型、布尔型、字符串型）")])]),t._v(" "),a("h3",{attrs:{id:"_6-9、类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9、类型转换"}},[t._v("#")]),t._v(" 6.9、类型转换")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：如果某项数据的类型如字符串100，而要参与计算的是数值运算，要怎么办？")]),t._v(" "),a("p",[t._v("回答：类型转换")])]),t._v(" "),a("h4",{attrs:{id:"概念-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-15"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("类型转换")]),t._v("：即将某种不符合的类型转换成目标类型")]),t._v(" "),a("ul",[a("li",[t._v("自动转换：系统自动转成目标类型（方便）")]),t._v(" "),a("li",[t._v("强制转换：通过代码强制转换成目标类型（效率高）")])]),t._v(" "),a("h4",{attrs:{id:"步骤-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-7"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1、自动转换")]),t._v(" "),a("ul",[a("li",[t._v("系统自动检测所需要类型")]),t._v(" "),a("li",[t._v("系统自动检测数据的类型")]),t._v(" "),a("li",[t._v("系统自动转换成目标类型（不改变数据本身）")])]),t._v(" "),a("p",[t._v("2、强制转换")]),t._v(" "),a("ul",[a("li",[t._v("明确所需要类型")]),t._v(" "),a("li",[t._v("强制转换成所需类型\n"),a("ul",[a("li",[t._v("不改变原来数据：在数据前使用"),a("code",[t._v("(目标类型)")]),t._v("，如(boolean)$a，将变量$a的值取出来转成布尔结果")]),t._v(" "),a("li",[t._v("改变原来数据：使用settype(变量,'目标类型')，如settype($a,'bool')，将变量$a的值转成布尔结果")])])]),t._v(" "),a("li",[t._v("强制转换的类型：资源和NULL不能强制转换\n"),a("ul",[a("li",[t._v("integer：转换成整型")]),t._v(" "),a("li",[t._v("float：转换成浮点型")]),t._v(" "),a("li",[t._v("bool：转换成布尔类型")]),t._v(" "),a("li",[t._v("string：转换成字符串类型")]),t._v(" "),a("li",[t._v("array：转换成数组类型")]),t._v(" "),a("li",[t._v("object：转换成对象类型")])])])]),t._v(" "),a("h4",{attrs:{id:"示例-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-14"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数据：假装是外来数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1.23a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#算术运算：求和（自动转换）：只能是数值操作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6.23")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#系统判定当前是加法操作，需要数值类型（整型|浮点型）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#系统判定当前参与运算的数据类型：$num1是整型，$num2是字符串型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#系统自动转换不符合目标的类型编程目标类型：$num2 ==> 数值型（浮点型） ==> 1.23")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#string(5)，依然是字符串，值也是'1.23a'，没有改变")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#算术运算：求和（强制转换）：只能是数值操作（不改变类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword type-casting"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword type-casting"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#6.23")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#int 100, string(5) '1.23a'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强制转换：改变类型（一般比较少用，除非是特定位置）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("settype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'float'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("settype")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'float'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#float 100,float 1.23")]),t._v("\n")])])]),a("h4",{attrs:{id:"常见的转换逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的转换逻辑"}},[t._v("#")]),t._v(" 常见的转换逻辑")]),t._v(" "),a("p",[t._v("1、字符串转数值")]),t._v(" "),a("ul",[a("li",[t._v("纯数值字符串 =》相应数值：'123.1' => 123.1")]),t._v(" "),a("li",[t._v("数字开头但有字母 =》 保留数字部分：'12a' => 12")]),t._v(" "),a("li",[t._v("小数点开头 =》 保留第一个小数点及之后的连续数字：'.1.1.a' => 0.1")]),t._v(" "),a("li",[t._v("字母开头 =》 0：'a123' => 0")])]),t._v(" "),a("p",[t._v("2、其他类型转布尔：极少转换后是FALSE，基本都是TRUE，以下除外")]),t._v(" "),a("ul",[a("li",[t._v("布尔FALSE转布尔：FALSE")]),t._v(" "),a("li",[t._v("整型0转布尔：FALSE")]),t._v(" "),a("li",[t._v("浮点型0.0转布尔：FALSE")]),t._v(" "),a("li",[t._v("空白字符串''和字符串'0'转布尔：FALSE")]),t._v(" "),a("li",[t._v("空数组array()转布尔：FALSE（比较多运用）")]),t._v(" "),a("li",[t._v("空类型NULL转布尔：FALSE")])]),t._v(" "),a("h4",{attrs:{id:"小结-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-15"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、类型转换是根据目标需求（运算）将数据变成目标格式")]),t._v(" "),a("ul",[a("li",[t._v("自动转换（PHP用的最多）：系统自动识别")]),t._v(" "),a("li",[t._v("强制转换（建议）：开发者限定\n"),a("ul",[a("li",[t._v("对值进行类型控制：在变量前使用：(目标类型)，不会改变变量本身")]),t._v(" "),a("li",[t._v("对变量进行类型重置：使用settype，会改变变量")])])])]),t._v(" "),a("p",[t._v("2、类型转换逻辑")]),t._v(" "),a("ul",[a("li",[t._v("字符串转数值")]),t._v(" "),a("li",[t._v("其他类型转布尔\n"),a("ul",[a("li",[t._v("较多转都是布尔true")]),t._v(" "),a("li",[t._v("极少数转成false")])])])]),t._v(" "),a("h2",{attrs:{id:"_7、运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、运算"}},[t._v("#")]),t._v(" 7、运算")]),t._v(" "),a("blockquote",[a("p",[t._v("提问：PHP中拿到了各种数据之后，是用来干什么的？")]),t._v(" "),a("p",[t._v("回答：运算")])]),t._v(" "),a("h4",{attrs:{id:"概念-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-16"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("运算符")]),t._v("：是PHP中的一些特殊符号，系统会自动根据这些特殊符号，将数据进行相应的运算")]),t._v(" "),a("p",[t._v("PHP中运算符有很多种：")]),t._v(" "),a("ul",[a("li",[t._v("赋值运算符：赋值操作")]),t._v(" "),a("li",[t._v("算术运算符：算术计算")]),t._v(" "),a("li",[t._v("错误抑制符：抑制报错")]),t._v(" "),a("li",[t._v("比较运算符：数据对比")]),t._v(" "),a("li",[t._v("合并运算符：真伪判定给出不同结果")]),t._v(" "),a("li",[t._v("逻辑运算符：逻辑结果判定")]),t._v(" "),a("li",[t._v("连接运算符：字符串连接")]),t._v(" "),a("li",[t._v("三目运算符：真伪判定给出不同结果")]),t._v(" "),a("li",[t._v("自操作运算符：简化操作")])]),t._v(" "),a("h4",{attrs:{id:"步骤-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-8"}},[t._v("#")]),t._v(" 步骤")]),t._v(" "),a("p",[t._v("1、确定当前需要使用到的运算符号")]),t._v(" "),a("p",[t._v("2、根据运算符号的规则确定需要参与的表达式个数")]),t._v(" "),a("p",[t._v("3、将对应的表达式和符号按照正确的顺序排列好即可")]),t._v(" "),a("h4",{attrs:{id:"示例-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-15"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP变量赋值本质")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、赋值符号为=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、赋值符号确定=左边为一个变量名，右边为一个产生结果的表达式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、排列")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#给变量$a赋值一个常数10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-16"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、运算符是系统提供的一类特殊符号，能够让系统对数据进行相关加工操作")]),t._v(" "),a("p",[t._v("2、PHP中运算符种类繁多，我们可以根据实际的需要进行选择")]),t._v(" "),a("ul",[a("li",[t._v("赋值运算符：赋值操作")]),t._v(" "),a("li",[t._v("算术运算符：算术计算")]),t._v(" "),a("li",[t._v("错误抑制符：抑制报错")]),t._v(" "),a("li",[t._v("比较运算符：数据对比")]),t._v(" "),a("li",[t._v("合并运算符：真伪判定给出不同结果")]),t._v(" "),a("li",[t._v("逻辑运算符：逻辑结果判定")]),t._v(" "),a("li",[t._v("连接运算符：字符串连接")]),t._v(" "),a("li",[t._v("三目运算符：真伪判定给出不同结果")]),t._v(" "),a("li",[t._v("自操作运算符：简化操作")]),t._v(" "),a("li",[t._v("位运算符：根据计算机最小单位 "),a("code",[t._v("bit位")]),t._v(" 进行运算（不多讲）")])]),t._v(" "),a("p",[t._v("3、运算符的运算规则")]),t._v(" "),a("ul",[a("li",[t._v("确定要使用到的运算符（做什么运算）")]),t._v(" "),a("li",[t._v("确定运算符需要的表达式数量和性质")]),t._v(" "),a("li",[t._v("按照顺序将表达式和运算符排列好")])]),t._v(" "),a("h3",{attrs:{id:"_7-1、赋值运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、赋值运算"}},[t._v("#")]),t._v(" 7.1、赋值运算")]),t._v(" "),a("h4",{attrs:{id:"概念-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-17"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[a("strong",[t._v("赋值运算")]),t._v("：将运算符右边的结果赋值给左边的符号，通过访问左边的符号即可得到右侧的结果")]),t._v(" "),a("ul",[a("li",[t._v("PHP中使用 "),a("code",[t._v("=")]),t._v(" 进行赋值")]),t._v(" "),a("li",[t._v("赋值运算要求左边是能够存储数据的符号（变量、常量），右边是一个有结果的表达式（值、有结果的计算过程）")])]),t._v(" "),a("p",[t._v("PHP中赋值运算符有以下几种：")]),t._v(" "),a("ul",[a("li",[t._v("=：普通赋值")]),t._v(" "),a("li",[t._v("+=|-=|*=|/=|%=：先将左边的符号与右边的表达式进行相应的操作（%是取余），然后赋值给左边")]),t._v(" "),a("li",[t._v(".=：先将左边的符号的结果与右边的结果进行字符串连接（.是字符串连接符），然后赋值给左边")])]),t._v(" "),a("h4",{attrs:{id:"示例-16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-16"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#普通赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#复合赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示$a = $a + 10; 先将$a + 10，然后将结果赋值给$a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示$c = $c . 'hello'")]),t._v("\n")])])]),a("h4",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[t._v("复合赋值运算是将左侧与右侧的整体结果进行运算")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以上右侧的结果是100 - 90 = 10，所以整体结果应该是$a = $a - (100 - 90) = 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误理解： $a = $a - 100 - 90 = -180")]),t._v("\n")])])]),a("ul",[a("li",[t._v("当复合赋值是/=或者%=的时候，右侧的结果不能为0")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误：等价于$a = $a / 0 = 10 / 0 = 无限大")]),t._v("\n")])])]),a("h4",{attrs:{id:"小结-17"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-17"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("1、赋值运算的基本符号是 "),a("code",[t._v("=")]),t._v("，也是程序语言中最基本的运算符")]),t._v(" "),a("p",[t._v("2、赋值运算分为两类")]),t._v(" "),a("ul",[a("li",[t._v("基本赋值："),a("code",[t._v("=")]),t._v("，右侧结果赋值给左侧存储数据的符号")]),t._v(" "),a("li",[t._v("复合赋值："),a("code",[t._v("+=|-=|*=|/=|%=|.=")]),t._v("，先将左侧数据符号代表的数据与右侧==结果==进行相应运算后赋值给左侧符号")])]),t._v(" "),a("p",[t._v("3、复合赋值运算时要注意 "),a("code",[t._v("/=")]),t._v(" 和 "),a("code",[t._v("%=")]),t._v(" 运算时，右侧结果不能为0")]),t._v(" "),a("h3",{attrs:{id:"_7-2、算术运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、算术运算"}},[t._v("#")]),t._v(" 7.2、算术运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解算术运算符的作用，并掌握算术运算的运算规则")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("算术运算")]),t._v("：实现两个数据的算术运算")]),t._v(" "),a("ul",[a("li",[t._v("普通算术运算，需要符号左右两边都是数值")]),t._v(" "),a("li",[t._v("+：加法运算，左右两边相加")]),t._v(" "),a("li",[t._v("-：减分运算，左边减去右边")]),t._v(" "),a("li",[t._v("*：乘法运算，左边乘以右边")]),t._v(" "),a("li",[t._v("/：除法运算，左边除以右边（右边不能为0）")]),t._v(" "),a("li",[t._v("%：取余运算（模运算），左边除以右边，保留整数部分结果（右边不能为0）")]),t._v(" "),a("li",[t._v("**：幂运算，PHP7后新增，底数的指数次相乘")]),t._v(" "),a("li",[t._v("*、/、%的优先级比+、-的要高")]),t._v(" "),a("li",[t._v("相同优先级的情况下，从左往右开始运算")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#算术运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#加减乘除取余基本运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$c = 10 + 8 = 18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$d = 10 / 8 = 1.25")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$e = 10 % 8 = 1（1.25取整数部分）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#幂运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$f = 10 * 10 = 100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运算符优先级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$g")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$g = 10 + 1 = 11")]),t._v("\n")])])]),a("p",[t._v("注意")]),t._v(" "),a("ul",[a("li",[t._v("除法运算 "),a("code",[t._v("/")]),t._v(" 和取余运算 "),a("code",[t._v("%")]),t._v(" 的右侧都不能为0")]),t._v(" "),a("li",[t._v("如果有多个表达式参与复合运算，那么可以使用 "),a("code",[t._v("()")]),t._v(" 来提升优先级")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$f")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$f = 20 / 10 = 2")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、算术运算是进行数学的算术操作")]),t._v(" "),a("p",[t._v("2、算术运算包含+、-、*、/、%、**六种操作")]),t._v(" "),a("p",[t._v("3、运算符有优先级")]),t._v(" "),a("ul",[a("li",[t._v("*、/、%优先级比+、-要高")]),t._v(" "),a("li",[t._v("相同级别的优先级，从左往右开始运算")]),t._v(" "),a("li",[t._v("可以使用 "),a("code",[t._v("()")]),t._v(" 来提升优先级")])]),t._v(" "),a("h3",{attrs:{id:"_7-3、错误抑制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3、错误抑制"}},[t._v("#")]),t._v(" 7.3、错误抑制")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解错误抑制符的作用，灵活运用错误抑制符来实现可能出现的错误的抑制")])]),t._v(" "),a("p",[t._v("提问：当进行算术运算的时候如果除数为0就错了，该怎么控制呢？")]),t._v(" "),a("p",[t._v("回答：数据判断或者暴力错误抑制")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("错误抑制")]),t._v("：在可能出现的错误的代码前使用错误抑制符，让错误不会报出来")]),t._v(" "),a("ul",[a("li",[t._v("错误抑制只需要在可能出现的错误的表达式之前使用即可")]),t._v(" "),a("li",[t._v("错误抑制符只有一个："),a("code",[t._v("@")])]),t._v(" "),a("li",[t._v("错误抑制符只针对就近的目标，如果是针对结果，需要使用"),a("code",[t._v("()")]),t._v("（优先级考虑）")]),t._v(" "),a("li",[t._v("错误抑制符只能抑制简单错误（notice、warning）")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正常处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：除数为0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误抑制处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：出错的位置是 10 / 0 这个过程 ，抑制的位置是10，无意义")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正确处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不报错：因为是过程出错")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、错误抑制符是用来抑制可能出现的错误的")]),t._v(" "),a("ul",[a("li",[t._v("抑制级别：notice、warning低级别错误")])]),t._v(" "),a("p",[t._v("2、错误抑制符"),a("code",[t._v("@")]),t._v("应该用在出现错误的位置")]),t._v(" "),a("ul",[a("li",[t._v("如果只是一个表达式错误：那么直接"),a("code",[t._v("@")])]),t._v(" "),a("li",[t._v("如果错误是一个过程：那么需要先将过程使用"),a("code",[t._v("()")]),t._v("包起来，然后进行抑制")])]),t._v(" "),a("h3",{attrs:{id:"_7-4、比较运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4、比较运算"}},[t._v("#")]),t._v(" 7.4、比较运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解比较运算的意义和工作原理，掌握常用比较运算符的使用")])]),t._v(" "),a("p",[t._v("提问：如何知道两个数据的大小呢？")]),t._v(" "),a("p",[t._v("回答：比较运算")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("比较运算")]),t._v("：比较两个数据的大小或者长度，然后得出比较结果")]),t._v(" "),a("ul",[a("li",[t._v("用于两个表达式的比较，比较的结果通常是true或者false")]),t._v(" "),a("li",[t._v("> ：左边大于右边返回true，否则返回false")]),t._v(" "),a("li",[t._v("<：左边小于右边返回true，否则返回false")]),t._v(" "),a("li",[t._v(">=：左边大于或者等于右边返回true，否则返回false")]),t._v(" "),a("li",[t._v("<=：左边小于或者等于右边返回true，否则返回false")]),t._v(" "),a("li",[t._v("<=>：左边大于右边返回1，等于右边返回0，小于右边返回-1")]),t._v(" "),a("li",[t._v("==：左边等于右边返回true，否则返回false")]),t._v(" "),a("li",[t._v("!=：左边不等于右边返回true，相等返回false")]),t._v(" "),a("li",[t._v("===：左边等于右边，且两边数据类型一致返回true，否则返回false")]),t._v(" "),a("li",[t._v("!==：左边不全等于右边返回true，否则返回false")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数字10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#字符串10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#基本比较运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#布尔true：10 > 5，成立")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全等运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#布尔true：10 与 '10'系统自动会转换成相同的格式比较，都是10，所以相等")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#布尔false：10与10值相同，但是10是数字，'10'是字符串，类型不同")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#飞船运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#0：相等，10与10值相同，类型不同不影响")]),t._v("\n")])])]),a("p",[t._v("注意：在PHP中比较运算比较特殊，通常系统会自动将类型转换成相同的然后进行比较，所以大家在使用==和===比较的时候，如果自己不够明确可以参照PHP操作手册中的类型比较表：PHP操作手册->附录->PHP类型比较表。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83.jpg",alt:"类型比较"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、比较运算就是比较两个数据的区别")]),t._v(" "),a("p",[t._v("2、飞船运算包含了大于、等于和小于三种运算")]),t._v(" "),a("p",[t._v("3、比较运算的结果普遍是true和false，飞船运算符的结果除外")]),t._v(" "),a("p",[t._v("4、比较运算通常在实际开发中用于判定数据的有效性")]),t._v(" "),a("ul",[a("li",[t._v("数值有大小可比较")]),t._v(" "),a("li",[t._v("字符串：比较对应的ASCII值\n"),a("ul",[a("li",[t._v("大小写比较ASCII值")]),t._v(" "),a("li",[t._v("如果是相同字符串，谁第一个不同的大谁赢")])])])]),t._v(" "),a("p",[t._v("5、PHP在进行比较时，会自动将不同类型转换成同一类型进行比较，所以这块需要特别注意")]),t._v(" "),a("ul",[a("li",[t._v("松散比较 "),a("code",[t._v("==")]),t._v(" ：只比较值即可")]),t._v(" "),a("li",[t._v("严格比较 "),a("code",[t._v("===")]),t._v(" ：值和类型都比较")])]),t._v(" "),a("h3",{attrs:{id:"_7-5、合并运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5、合并运算"}},[t._v("#")]),t._v(" 7.5、合并运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握合并运算的操作，以及合并运算符的实际运用")])]),t._v(" "),a("p",[t._v("提问：用户提交数据时，我们怎么确定用户提交了数据呢？")]),t._v(" "),a("p",[t._v("回答：判定或者合并运算")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("合并运算")]),t._v("：合并运算是用于简单的数据存在性判定，不存在的时候给出一个设定值")]),t._v(" "),a("ul",[a("li",[t._v("合并运算需要一个判定：目标")]),t._v(" "),a("li",[t._v("合并运算需要一个设定值：目标不存在的时候的值")]),t._v(" "),a("li",[t._v("合并运算符： $a "),a("code",[t._v("??")]),t._v(" B\n"),a("ul",[a("li",[t._v("$a存在，整个表达式返回$a的值")]),t._v(" "),a("li",[t._v("$a不存在，整个表达式返回B值")])])]),t._v(" "),a("li",[t._v("合并运算是保证代码的逻辑完整性：即总是有一个结果（不会不存在）")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#假设用户是通过POST方式提交数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gender")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'gender'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#上述代码如果用户没有提交gender，那么会报错，我们可以通过合并运算符给定目标值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gender")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'gender'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'男'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用户提交了取$_POST的值，没有提交取gender")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、合并运算符是 "),a("code",[t._v("??")])]),t._v(" "),a("p",[t._v("2、合并运算符是针对数据存在的判定")]),t._v(" "),a("ul",[a("li",[t._v("存在结果：取原始结果")]),t._v(" "),a("li",[t._v("不存在结果：使用替代结果")])]),t._v(" "),a("p",[t._v("3、合并运算在进行一些数据获取时，如果数据不是那么重要的情况下使用（如果数据非常重要，那么就必须让用户提交，而不是给默认值）")]),t._v(" "),a("h3",{attrs:{id:"_7-6、连接运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6、连接运算"}},[t._v("#")]),t._v(" 7.6、连接运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解连接运算的实际应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("连接运算")]),t._v("：专门为字符串连接操作设定的运算符")]),t._v(" "),a("ul",[a("li",[t._v("连接运算需要两个数据的参与")]),t._v(" "),a("li",[t._v("连接运算符只有一个： "),a("code",[t._v(".")]),t._v(" 英文点")]),t._v(" "),a("li",[t._v("连接运算是将两个字符串连接成一个字符串\n"),a("ul",[a("li",[t._v("如果数据本身不是字符串，系统会自动转变成字符串")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将$a和$b连接起来，然后一次性输出：hello world")]),t._v("\n")])])]),a("p",[t._v("注意：在进行连接运算时，如果有其他运算，最好将其他运算使用 "),a("code",[t._v("()")]),t._v(" 包起来（提升优先级）")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# +、-和.优先级一样，所以是先左后右")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#5，同时报错：先算的hello . 5，编程hello5，然后去+5")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正确处理")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#hello10，不出错")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、连接运算是针对字符串连接使用的")]),t._v(" "),a("p",[t._v("2、连接运算符使用 "),a("code",[t._v(".")]),t._v(" 实现")]),t._v(" "),a("p",[t._v("3、连接运算会将符号两边的数据先转换成字符串后运算")]),t._v(" "),a("p",[t._v("4、连接运算与其他运算符一起使用时，要主要运算符的优先级带来的问题")]),t._v(" "),a("h3",{attrs:{id:"_7-7、三目运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-7、三目运算"}},[t._v("#")]),t._v(" 7.7、三目运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解三目运算的逻辑，掌握三目运算符的应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("三目运算")]),t._v("：即有三个表达式参与运算的运算，是一种简单的判定以及给出结果的运算")]),t._v(" "),a("ul",[a("li",[t._v("三目运算：需要三个表达式参与运算")]),t._v(" "),a("li",[t._v("三目运算： 表达式1 ? 表达式2 : 表达式3\n"),a("ul",[a("li",[t._v("如果表达式1为真：返回表达式2的结果")]),t._v(" "),a("li",[t._v("如果表达式1为假：返回表达式3的结果")])])]),t._v(" "),a("li",[t._v("三目运算简化：表达式1 ?: 表达式3\n"),a("ul",[a("li",[t._v("如果表达式1为真：返回表达式1的结果（等价于： 表达式1 ? 表达式1 : 表达式3）")]),t._v(" "),a("li",[t._v("如果表达式1为假：返回表达式3的结果")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#年龄大于等于18岁，可以上网，否则不能上网")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'上网'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'不能上网'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#上网：因为$age >= 18结果为真")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用户提交数据：如果有就用，没有就给初始值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等价于合并运算：$res = $_GET['age'] ?? 18")]),t._v("\n")])])]),a("p",[t._v("三目运算是可以多个嵌入到一起的（不建议），如果有这种情况要特别注意，最好使用"),a("code",[t._v("()")]),t._v(" 将子三目运算包起来")]),t._v(" "),a("div",{staticClass:"language-PHp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#年龄小于18岁，未成年，大于18岁，小于30岁，青年，大于30，小于65，中年，大于65，老年")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误示例：自己看不懂，程序也看不懂")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'老年'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'中年'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'青年'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'未成年'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调整，每个子三目运算都进行包裹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'老年'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'中年'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'青年'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'未成年'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、三目运算标准需要三个表达式参与运算：表达式1 ? 表达式2 : 表达式3")]),t._v(" "),a("ul",[a("li",[t._v("表达式1成立：得到表达式2的结果")]),t._v(" "),a("li",[t._v("表达式1不成立：得到表达式3的结果")])]),t._v(" "),a("p",[t._v("2、简化的三目运算与合并运算一样（合并运算在PHP7以后有的，就是为了简化三目运算）")]),t._v(" "),a("ul",[a("li",[t._v("表达式1 ? : 表达式3 ==== 表达式1 ?? 表达式3（不完全等价：三目运算是判定表达式1的结果是否为真，而合并运算是判定表达式1是否存在）")])]),t._v(" "),a("p",[t._v("3、三目运算理论上可以无限嵌套，但是要注意对子三目运算的包裹（不建议使用）")]),t._v(" "),a("h3",{attrs:{id:"_7-8、逻辑运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-8、逻辑运算"}},[t._v("#")]),t._v(" 7.8、逻辑运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解逻辑运算的概念，掌握逻辑运算符的原理及应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("逻辑运算")]),t._v("：是针普通运算的结果的二次运算")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("逻辑运算一般需要1个或者2个表达式参与")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("&&")]),t._v("：逻辑与运算（也作and），左右两边结果都为true返回true，否则返回false")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("||")]),t._v("：逻辑或运算（也作or），左右两边结果至少有一个true返回true，否则返回false")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("!")]),t._v("：逻辑非运算，原来结果为true返回false，原来结果为false返回true")])]),t._v(" "),a("li",[a("p",[t._v("逻辑运算（逻辑与和逻辑或）也称之为短路运算：即左边表达式如果已经能够确定结果，那么右边表达式就不再判定")]),t._v(" "),a("ul",[a("li",[t._v("逻辑或：如果左边第一个表达式已经为真，第二个表达式就不会运算（结果为真）")]),t._v(" "),a("li",[t._v("逻辑与：如果左边第一个表达式已经为假，第二个表达式就不会运算（结果为假）")])])]),t._v(" "),a("li",[a("p",[t._v("运算原理：将所有表达式的结果转换成布尔结果之后再进行运算")])])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#简单示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#逻辑运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#true，因为$a为true，所以整个结果为true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#false，因为$b为false，所以整个结果为false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#false，因为$a为true，取反得到false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通常参与逻辑运算的同时会有其他运算参与")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$_POST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'age'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$age")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先执行左侧的$age < 18比较运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后执行右侧的$age > 65比较运算")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#两个比较结果进行 || 逻辑运算")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#短路验证")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#案例：实际开发不要出现运算中赋值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 1、比较左边：$a == 100，结果为true\n 2、发现是逻辑或运算：结果已经出来：true\n 3、忽略$b = 10运算\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#未定义的变量")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、逻辑运算符有三种： "),a("code",[t._v("&&")]),t._v(" 逻辑与、"),a("code",[t._v("||")]),t._v("逻辑或、"),a("code",[t._v("!")]),t._v("逻辑非")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("&&")]),t._v(" ：两个表达式都为真结果才为真，其他为假")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("||")]),t._v(" ：两个表达式都为假结果才为假，其他为真")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("!")]),t._v(" ：一个表达式，对本身布尔结果取反")])])]),t._v(" "),a("p",[t._v("2、 逻辑运算是对布尔结果进行比较")]),t._v(" "),a("ul",[a("li",[t._v("本身就是布尔结果：直接运算")]),t._v(" "),a("li",[t._v("本身非布尔结果：自动转换成布尔结果后再运算")])]),t._v(" "),a("p",[t._v("3、逻辑运算通常与其他运算结合在一起运算")]),t._v(" "),a("p",[t._v("4、逻辑与和逻辑或也称之为短路运算")]),t._v(" "),a("ul",[a("li",[t._v("逻辑与：第一个为假，第二个不运算（短路）")]),t._v(" "),a("li",[t._v("逻辑或：第一个为真，第二个不运算（短路）")]),t._v(" "),a("li",[t._v("在实际开发中，应该将大概率能判定整个结果的运算放前面")])]),t._v(" "),a("p",[t._v("5、逻辑运算在实际开发的时候运用比较多，尤其是逻辑复杂的程序")]),t._v(" "),a("h3",{attrs:{id:"_7-9、自操作运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-9、自操作运算"}},[t._v("#")]),t._v(" 7.9、自操作运算")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解自操作运算的原理，掌握自操作运算的应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("自操作运")]),t._v("：针对一个变量的自我操作运算，能够让变量实现自我按规矩改变")]),t._v(" "),a("ul",[a("li",[t._v("自操作运算只需要一个变量即可完成")]),t._v(" "),a("li",[t._v("自操作运算分为两种\n"),a("ul",[a("li",[t._v("++：变量自增，即自己加1，然后赋值给自己")]),t._v(" "),a("li",[t._v("--：变量自减，即自己减1，然后赋值给自己")])])]),t._v(" "),a("li",[t._v("自操作符号分前置和后置：前后置的区别运用是在参与其他运算时体现\n"),a("ul",[a("li",[t._v("前置自操作符：先运算自己、改变自己，然后把改变后的结果去参与其他运算")]),t._v(" "),a("li",[t._v("后置自操作符：先把自己当前的值保留去参与其他运算，然后运算自己、改变自己")])])]),t._v(" "),a("li",[t._v("自操作在变量都是变化1的时候，而且需要重复执行时用到\n"),a("ul",[a("li",[t._v("年龄：每年自增1")]),t._v(" "),a("li",[t._v("寿命：每年自减1")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("简单自操作运算")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变量赋值：多个同时赋值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等价于： $a = $a + 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等价于： $b = $b + 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#独立运算，前置与后置没有区别")]),t._v("\n")])])]),a("p",[t._v("前后置区别（虚岁生日和实岁生日）：参与其他运算")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#刚出生")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#虚岁生日")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'我今年：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'岁'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我今年1岁：前置先改变自己，后参与运算")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实岁生日")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'我今年：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'岁'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#我今年0岁：后置先参与运算，后改变自己")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最终$a和$b都变成了1")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、自操作包含 "),a("code",[t._v("++")]),t._v(" 和 "),a("code",[t._v("--")]),t._v(" 都是一个变量参与的改变运算，每次都改变1")]),t._v(" "),a("p",[t._v("2、自操作运算包含前置运算和后置运算")]),t._v(" "),a("ul",[a("li",[t._v("前置自操作：先改变自己、后参与运算")]),t._v(" "),a("li",[t._v("后置自操作：先参与运算、后改变自己")]),t._v(" "),a("li",[t._v("条件：前后置的区别需要运算本身还要参与到其他运算\n"),a("ul",[a("li",[t._v("输出")]),t._v(" "),a("li",[t._v("算术运算")]),t._v(" "),a("li",[t._v("连接运算")])])])]),t._v(" "),a("p",[t._v("3、自操作运算是有规律的自增1或者自减1，实际在循环时会经常用到（循环条件的变更）")]),t._v(" "),a("h3",{attrs:{id:"_7-10、运算符优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-10、运算符优先级"}},[t._v("#")]),t._v(" 7.10、运算符优先级")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解运算符的优先级，懂得使用"),a("code",[t._v("()")]),t._v("来提升复杂运算的优先级别")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("运算符优先级")]),t._v("：多种运算符结合一起运算时，系统会根据不同的优先级进行优先运算，从而导致运算结果不可预知")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7.jpg",alt:"运算符优先级"}})]),t._v(" "),a("p",[t._v("图中，从上到下依次优先级降低（部分运算符没讲，略过）")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("在不确定表达式中优先级顺序的时候，使用"),a("code",[t._v("()")]),t._v("来保证对应的运算不会被其他优先级高的所拆分")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#11，因后续运算符都比+号高")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#0")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、运算符优先级是系统提供的一种结合模式，优先级高的先结合，级别低的后结合")]),t._v(" "),a("p",[t._v("2、为了保障目标运算不被其他优先级高的影响，可以通过"),a("code",[t._v("()")]),t._v("来实现包裹")])])}),[],!1,null,null,null);s.default=e.exports}}]);