(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{386:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"函数基本应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数基本应用"}},[t._v("#")]),t._v(" 函数基本应用")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握函数的概念和作用，掌握模块化编程思想，理解函数的各个部分，能够自定义函数解决问题")])]),t._v(" "),a("ul",[a("li",[t._v("函数的概念和应用")]),t._v(" "),a("li",[t._v("函数的基本结构")]),t._v(" "),a("li",[t._v("函数的定义规范")])]),t._v(" "),a("h2",{attrs:{id:"_1、认识函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、认识函数"}},[t._v("#")]),t._v(" 1、认识函数")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握函数的概念和作用")])]),t._v(" "),a("p",[t._v("提问：如果有一个需求，会在不同的应用场景里都出现，那么怎么可以让代码可以多处使用呢？")]),t._v(" "),a("p",[t._v("回答：")]),t._v(" "),a("p",[t._v("1、复制粘贴：灵活性差，维护起来要多处维护")]),t._v(" "),a("p",[t._v("2、使用函数：一处维护，多处使用")]),t._v(" "),a("blockquote",[a("p",[t._v("举个栗子")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%87%BD%E6%95%B0%E6%A6%82%E5%BF%B5.gif",alt:"函数概念"}})]),t._v(" "),a("p",[t._v("1、买的东西可能变化")]),t._v(" "),a("p",[t._v("2、价格可能不同")]),t._v(" "),a("p",[t._v("3、买的时机不固定")]),t._v(" "),a("p",[t._v("4、但是买的过程每次都差一样")]),t._v(" "),a("p",[a("strong",[t._v("所以")]),t._v("：以上完成买东西的过程，可以在需要用到的时候调取执行即可完成。")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("函数")]),t._v("：某段在一起解决某个问题的代码块，给代码块一个标识符，以后可以使用标识符来访问代码块")]),t._v(" "),a("ul",[a("li",[t._v("函数是由一堆代码块组成")]),t._v(" "),a("li",[t._v("函数会有一个函数标识（函数名）")]),t._v(" "),a("li",[t._v("函数能够在需要用到的时候通过名字直接让代码块运行")]),t._v(" "),a("li",[t._v("函数的作用\n"),a("ul",[a("li",[t._v("模块化编程：业务拆分成小模块，然后使用函数进行代码编写")]),t._v(" "),a("li",[t._v("代码的复用：通过调用函数实现函数代码块的重复利用")])])]),t._v(" "),a("li",[t._v("函数的基本结构\n"),a("ul",[a("li",[t._v("关键字：function")]),t._v(" "),a("li",[t._v("函数名：自定义的名字（代码块标志）")]),t._v(" "),a("li",[t._v("参数：数据的改变（业务相同，数据可以不同）")]),t._v(" "),a("li",[t._v("函数体：解决问题的代码块")]),t._v(" "),a("li",[t._v("return：返回值，函数运行的结果处理")])])])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" 函数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    函数体（代码块）\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 买火腿")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("getGoods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算位置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算距离")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算价格")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#计算时间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'火腿'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#写好上述代码后，凡是要买火腿的时候，都使用getGoods就可以了")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、函数是一起解决某个问题的代码块，解决的问题是两个")]),t._v(" "),a("ul",[a("li",[t._v("模块化编程：一个函数就是一个模块的最小单元")]),t._v(" "),a("li",[t._v("代码的复用：函数代码可以在需要时重复利用")])]),t._v(" "),a("p",[t._v("2、函数组成")]),t._v(" "),a("ul",[a("li",[t._v("关键字：function")]),t._v(" "),a("li",[t._v("函数名：函数使用的标志")]),t._v(" "),a("li",[t._v("参数：数据的动态改变，如果业务固定，那么可以没有参数")]),t._v(" "),a("li",[t._v("函数体：解决问题的代码块")]),t._v(" "),a("li",[t._v("返回值：函数处理完的结果处理，如果业务不需要返回值，可以没有")])]),t._v(" "),a("h2",{attrs:{id:"_2、函数基本应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、函数基本应用"}},[t._v("#")]),t._v(" 2、函数基本应用")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解函数的定义规范和使用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("函数应用")]),t._v("：是指根据需求定义函数，然后在需要的位置调用函数")]),t._v(" "),a("ul",[a("li",[t._v("定义函数")]),t._v(" "),a("li",[t._v("调用函数：使用函数名 + ()即可实现调用")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、分析需求功能")]),t._v(" "),a("p",[t._v("2、确定函数名")]),t._v(" "),a("p",[t._v("3、确定函数体")]),t._v(" "),a("p",[t._v("4、调用函数")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印九九乘法表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、分析需求：打印九九乘法表，可能有多个位置需要使用（因此使用函数开发）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、确定函数名：九九乘法表，确定相关性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("chengfa99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、确定函数体：输出（不需要返回值）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#换行")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、调用函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chengfa99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chengfa99")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#多次调用，不需要重复写99乘法表逻辑")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、函数应用分为两个部分")]),t._v(" "),a("ul",[a("li",[t._v("定义函数：根据需求实现函数")]),t._v(" "),a("li",[t._v("调用函数：在需要函数运行的时候调用函数")])]),t._v(" "),a("p",[t._v("2、函数一旦定义，可以无限次调用")]),t._v(" "),a("h2",{attrs:{id:"_3、函数内存分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、函数内存分析"}},[t._v("#")]),t._v(" 3、函数内存分析")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解函数在内存中的运行原理")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("ul",[a("li",[t._v("函数运行（调用）的前提：当前函数已经在内存中存在")]),t._v(" "),a("li",[t._v("函数不会自动运行")]),t._v(" "),a("li",[t._v("函数运行是在栈区开辟内存运行")]),t._v(" "),a("li",[t._v("函数运行结束会自动释放所占用内存")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、脚本编译：将代码加载到内存中")]),t._v(" "),a("ul",[a("li",[t._v("代码被读取（读到内存中：代码写在文件中）")]),t._v(" "),a("li",[t._v("代码被编译：语法出错会报错（结果是将编译后的代码装在到代码段（专门放代码的内存））")]),t._v(" "),a("li",[t._v("所有代码被加载到内存中")])]),t._v(" "),a("p",[t._v("2、代码执行")]),t._v(" "),a("ul",[a("li",[t._v("代码顺序逐行执行")]),t._v(" "),a("li",[t._v("函数结构不会被执行（跳过）")])]),t._v(" "),a("p",[t._v("3、函数执行（函数名+()）")]),t._v(" "),a("ul",[a("li",[t._v("在内存中寻找函数名对应的函数是否存在\n"),a("ul",[a("li",[t._v("不存在：报错")]),t._v(" "),a("li",[t._v("存在：继续")])])]),t._v(" "),a("li",[t._v("在栈区开辟内存加载函数\n"),a("ul",[a("li",[t._v("参数处理")]),t._v(" "),a("li",[t._v("函数体执行")])])]),t._v(" "),a("li",[t._v("函数执行结束\n"),a("ul",[a("li",[t._v("占用内存释放（栈区内存）")]),t._v(" "),a("li",[t._v("回到函数调用处")])])])]),t._v(" "),a("p",[t._v("4、脚本执行结束：释放所有内存（包括存放代码的代码段）")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先调用函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("world")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后定义函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("结果分析：")]),t._v(" "),a("p",[t._v("1、代码编译：函数hello被加载到内存")]),t._v(" "),a("p",[t._v("2、执行代码")]),t._v(" "),a("ul",[a("li",[t._v("hello()执行：发现内存中有：执行，输出hello")]),t._v(" "),a("li",[t._v("world()执行：发现内存中没有：报错")])]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、函数运行的前提是内存中已经存在该函数")]),t._v(" "),a("p",[t._v("2、函数运行与定义的顺序没有先后顺序（建议先定义后运行）")]),t._v(" "),a("p",[t._v("3、函数的执行是在栈区运行（效率高）")]),t._v(" "),a("p",[t._v("4、函数运行完就会释放自己所用到的内存")]),t._v(" "),a("p",[t._v("5、PHP脚本运行结束会释放所有内存")]),t._v(" "),a("h2",{attrs:{id:"_4、函数形参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、函数形参"}},[t._v("#")]),t._v(" 4、函数形参")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解形参的概念和意义，灵活运用形参增加函数的灵活性")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("形参")]),t._v("：形式参数，指在函数定义结构时所使用到的占位符")]),t._v(" "),a("ul",[a("li",[t._v("形参在函数定义时设置的变量")]),t._v(" "),a("li",[t._v("形参设定后是在函数内部使用")]),t._v(" "),a("li",[t._v("形参名字与外部任何变量无关")]),t._v(" "),a("li",[t._v("形参数量根据具体的需求定，理论不限（不要太多）")]),t._v(" "),a("li",[t._v("形参作用\n"),a("ul",[a("li",[t._v("在函数内部先使用对应的形参假设运算（允许外部调整运算数据）")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定函数需求")]),t._v(" "),a("p",[t._v("2、在定义函数时：确定是否需要形参参与内部运算以及需求数量")]),t._v(" "),a("p",[t._v("3、在函数内部利用形参实现运算")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、打印不确定层级的乘法表")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定需求：打印乘法表，但是不确定层级")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、不确定的层级无法完成，所以需要一个变量来控制，通过形参实现$n")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("chengfaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、内部利用$n来代替层级")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#换行")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("2、求两个数的平方和")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定需求：两个数的平方和")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、需要两个数不确定，利用形参代替")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("mySum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、内部利用$n1和$n2代表两个数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、形参是在函数定义时指定的变量")]),t._v(" "),a("p",[t._v("2、形参的作用是在函数内部代替数据进行运行（占位符）")]),t._v(" "),a("ul",[a("li",[t._v("形参数量可以根据需求来确定")])]),t._v(" "),a("p",[t._v("3、形参作用")]),t._v(" "),a("ul",[a("li",[t._v("允许内部数据产生变化（从而运算出不同结果）")])]),t._v(" "),a("h2",{attrs:{id:"_5、函数实参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、函数实参"}},[t._v("#")]),t._v(" 5、函数实参")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解实参的工作原理，以及实参与形参的关系")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("实参")]),t._v("：实际参数，指在调用函数数传递进去的实际数据")]),t._v(" "),a("ul",[a("li",[t._v("实参是在调用函数时传递的数据")]),t._v(" "),a("li",[t._v("实参数据可以是数据也可以是保存数据的其他表达式\n"),a("ul",[a("li",[t._v("数据常量")]),t._v(" "),a("li",[t._v("变量")]),t._v(" "),a("li",[t._v("常量")]),t._v(" "),a("li",[t._v("运算表达式")])])]),t._v(" "),a("li",[t._v("实参的本质是将数据赋值给形参")]),t._v(" "),a("li",[t._v("实参需要对准形参（数量、顺序）")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定函数的形参数量和顺序")]),t._v(" "),a("p",[t._v("2、在调用函数时传入相应的实参")]),t._v(" "),a("ul",[a("li",[t._v("数量对好")]),t._v(" "),a("li",[t._v("顺序对齐")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义函数：形参")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("mySum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定形参数量和顺序：数量2个，顺序第一个是整数，第二个也是整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、调用函数：传入实际参数（数据常量）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出13")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调用函数：传入变量和常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("V")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("V")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#13")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调用函数：传入运算结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#13")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图分析")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E6%B5%81%E7%A8%8B%E5%9B%BE.png",alt:"函数流程图"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、实参是在调用时传入的实际数据")]),t._v(" "),a("ul",[a("li",[t._v("数据常量")]),t._v(" "),a("li",[t._v("变量")]),t._v(" "),a("li",[t._v("常量")]),t._v(" "),a("li",[t._v("有结果的表达式")])]),t._v(" "),a("p",[t._v("2、实参是在调用函数时将值赋值给形参，本质是形参拿到值之后在参与函数运算")]),t._v(" "),a("p",[t._v("3、实参的数量和顺序必须对应形参")]),t._v(" "),a("ul",[a("li",[t._v("数量少于形参，运行时形参得不到赋值，会报错")]),t._v(" "),a("li",[t._v("数量多于形参，不影响函数运行")]),t._v(" "),a("li",[t._v("顺序必须在调用时对应好，系统不能自动匹配")])]),t._v(" "),a("h2",{attrs:{id:"_6、形参默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、形参默认值"}},[t._v("#")]),t._v(" 6、形参默认值")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握默认值的意义和应用场景，了解默认值的工作原理")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("形参默认值")]),t._v("：是指在定义形参的时候就给定一个大概率值，可以在调用时不传递")]),t._v(" "),a("ul",[a("li",[t._v("默认值在定义时赋值")]),t._v(" "),a("li",[t._v("默认值是最常见出现的值")]),t._v(" "),a("li",[t._v("默认值是在调用时才给形参赋值")]),t._v(" "),a("li",[t._v("有默认值后\n"),a("ul",[a("li",[t._v("调用时不传递实参，系统自动给形参赋值默认值")]),t._v(" "),a("li",[t._v("调用时传递实参，系统会使用实参而不是默认值")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、定义函数：给形参设定默认值")]),t._v(" "),a("p",[t._v("2、调用函数")]),t._v(" "),a("ul",[a("li",[t._v("传递实参，形参使用实参数据赋值")]),t._v(" "),a("li",[t._v("不传递实参，形参使用默认值赋值")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印乘法表")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义函数：乘法表打印最多就是九九乘法表，所以给定默认值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("chengfa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chengfa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印九九乘法表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chengfa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印五五乘法表")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、默认值是在定义函数时给形参设定的预计值")]),t._v(" "),a("p",[t._v("2、默认值设定的通常是参数最可能出现的值")]),t._v(" "),a("p",[t._v("3、默认值的设定目的")]),t._v(" "),a("ul",[a("li",[t._v("让函数能够在不传递实参也能正常工作（便捷性）")]),t._v(" "),a("li",[t._v("允许调用者通过数据改变函数计算结果（灵活性）")])]),t._v(" "),a("p",[t._v("4、默认值是在函数调用的时候赋值")]),t._v(" "),a("ul",[a("li",[t._v("调用时没有传递实参：使用默认值赋值给形参")]),t._v(" "),a("li",[t._v("调用时有传递实参：使用实参赋值给形参")])]),t._v(" "),a("h2",{attrs:{id:"_7、参数传值方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、参数传值方式"}},[t._v("#")]),t._v(" 7、参数传值方式")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解参数传值方式的区别和应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("参数传值方式")]),t._v("：在函数调用时，实参给形参传值时所采用的传值方式")]),t._v(" "),a("ul",[a("li",[t._v("参数传值方式在函数定义时规定")]),t._v(" "),a("li",[t._v("参数传值方式有两种\n"),a("ul",[a("li",[t._v("值传递：默认，即外部数据，如function a($b)")]),t._v(" "),a("li",[t._v("引用传递：使用&符号，即传递外部变量存储数据的内存地址，如function a(&$b)")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定函数参数的目的")]),t._v(" "),a("ul",[a("li",[t._v("外部传入数据内部运算，不影响外部：值传递")]),t._v(" "),a("li",[t._v("外部传入数据内部运算，同时外部也受影响：引用传递")])]),t._v(" "),a("p",[t._v("2、传递实参时要确定形参的传值方式")]),t._v(" "),a("ul",[a("li",[t._v("值传递：数据常量、变量、常量、运算表达式都可以（能有数据都可以）")]),t._v(" "),a("li",[t._v("引用传递：变量")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#值传递：输出一个指定数到1之间的整数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前$n最终会等于0（正常正数传入）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出3,2,1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出2,1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3，没有变化")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#引用传递：输出一个指定数到1之间的整数（改变传入的数据）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前$n最终会等于0（正常正数传入）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出3,2,1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：形参$m要求引用传值，只能传入变量")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、参数传值方式是指实参传入到形参后，内部的改变是否对外部有影响")]),t._v(" "),a("ul",[a("li",[t._v("值传递：传递数值，内部修改不影响外部（所以外部只要是能得到数据的方式都可以做实参）")]),t._v(" "),a("li",[t._v("引用传递：传递数据的内存地址，内部修改影响外部（所以只能传递变量）")])]),t._v(" "),a("h2",{attrs:{id:"_8、返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、返回值"}},[t._v("#")]),t._v(" 8、返回值")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握返回值的操作，了解return关键字的作用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("返回值")]),t._v("：即函数运行过程中对调用处返回的处理结果")]),t._v(" "),a("ul",[a("li",[t._v("关键字：return")]),t._v(" "),a("li",[t._v("函数都有返回值\n"),a("ul",[a("li",[t._v("默认返回null")]),t._v(" "),a("li",[t._v("可以明确使用return返回任意数据类型")])])]),t._v(" "),a("li",[t._v("return会强制结束函数")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定函数功能：是否需要运算结果")]),t._v(" "),a("ul",[a("li",[t._v("不需要：不用管返回值")]),t._v(" "),a("li",[t._v("需要：在得到结果后将结果返回")])]),t._v(" "),a("p",[t._v("2、函数是否需要终止运行，需要的话：直接return")]),t._v(" "),a("p",[t._v("3、在函数调用处对结果进行操作")]),t._v(" "),a("ul",[a("li",[t._v("输出结果")]),t._v(" "),a("li",[t._v("使用变量保存结果")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、默认返回值")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FUNCTION__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#display1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#null")]),t._v("\n\n")])])]),a("p",[t._v("2、使用返回值")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FUNCTION__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#display2")]),t._v("\n")])])]),a("p",[t._v("3、使用return结束函数")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FUNCTION__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不会输出：return让函数结束了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#display3")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、函数使用return返回内部结果")]),t._v(" "),a("ul",[a("li",[t._v("默认函数最后会自动返回null")]),t._v(" "),a("li",[t._v("return可以返回任意类型的数据")])]),t._v(" "),a("p",[t._v("2、return返回值是返回给函数调用处")]),t._v(" "),a("p",[t._v("3、return一旦运行，之后的其他函数体就不会执行了")]),t._v(" "),a("h2",{attrs:{id:"_9、函数规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、函数规则"}},[t._v("#")]),t._v(" 9、函数规则")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解函数的基本使用规则，并按照规则来实现开发")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("函数规则")]),t._v("：函数本身没有太多规则，通常是我们开发者对其有一些约定俗称的规范")]),t._v(" "),a("p",[t._v("1、函数命名规则")]),t._v(" "),a("ul",[a("li",[t._v("函数名字由数字、字母和下划线组成，数字不能开头")]),t._v(" "),a("li",[t._v("PHP中函数名不区分大小写")]),t._v(" "),a("li",[t._v("PHP中函数名不能重复：即一个脚本运行周期内不能有两个同名函数")]),t._v(" "),a("li",[t._v("函数命名应当见名知意")]),t._v(" "),a("li",[t._v("当函数有多个单词组成的时候，通常使用以下两种方式\n"),a("ul",[a("li",[t._v("驼峰法：第一个单词首字母小写，其他单词首字母大写（小驼峰）")]),t._v(" "),a("li",[t._v("下划线法：都小写，但是单词间使用下划线连接（较多使用）")])])])]),t._v(" "),a("p",[t._v("2、函数运用规则")]),t._v(" "),a("ul",[a("li",[t._v("函数的目的是为了模块化开发，实现代码的重复利用")]),t._v(" "),a("li",[t._v("函数解决问题的颗粒度较小：即函数应该实现小功能（不贪大，越小复用性越高，大问题可以是由多个小函数组成，调用即可）")])]),t._v(" "),a("p",[t._v("3、函数体规则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数体主要是用来解决某个具体问题")])]),t._v(" "),a("li",[a("p",[t._v("函数体可以进行定义变量、运算数据、数据判定（分支）、数据重复（循环），也可以通过调用其他函数解决问题")])]),t._v(" "),a("li",[a("p",[t._v("函数体内基本不进行输出操作，如果有数据的话通常是通过返回值返回给调用处")])]),t._v(" "),a("li",[a("p",[t._v("函数操作通常只负责运算，不对结果负责（即结果交给调用处分析判定）")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);