(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{386:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),a("blockquote",[a("p",[t._v("举个栗子")])]),t._v(" "),a("p",[t._v("晨练")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.gif",alt:"流程控制"}})]),t._v(" "),a("p",[t._v("说明：我们每天都在做一些类似的事情")]),t._v(" "),a("p",[t._v("1、顺序执行某些事情：起床后刷牙")]),t._v(" "),a("p",[t._v("2、在规划后选择某一件执行：两个晨练方案，根据天气条件选择执行")]),t._v(" "),a("p",[t._v("3、在做某一件事情之后重复执行：跑圈圈")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("流程控制")]),t._v("：就是设定好代码的执行流程，流程控制有三大结构")]),t._v(" "),a("ul",[a("li",[t._v("顺序结构：代码逐行向下顺序执行")]),t._v(" "),a("li",[t._v("分支结构：设定好代码，根据条件选择性执行")]),t._v(" "),a("li",[t._v("循环结构：设定好代码，根据条件重复执行")])]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、流程控制是代码为了实现现实的业务场景而设计的代码运行方式")]),t._v(" "),a("p",[t._v("2、流程控制分为三种")]),t._v(" "),a("ul",[a("li",[t._v("顺序结构：代码顺序执行")]),t._v(" "),a("li",[t._v("分支结构：代码选择性执行")]),t._v(" "),a("li",[t._v("循环结构：代码重复执行")])]),t._v(" "),a("h2",{attrs:{id:"_1、顺序结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、顺序结构"}},[t._v("#")]),t._v(" 1、顺序结构")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解代码的顺序执行方式")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("顺序结构")]),t._v("：即代码是以行为单位，逐行向下执行的")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("以上执行逻辑")]),t._v(" "),a("p",[t._v("1、执行第一行：$a = 10，在内存产生变量")]),t._v(" "),a("p",[t._v("2、执行第二行：echo $a，输出10（空行忽略）")]),t._v(" "),a("p",[t._v("3、执行到最后：脚本执行结束，销毁所有资源")]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、代码默认是顺序结构执行，即逐行向下")]),t._v(" "),a("h2",{attrs:{id:"_2、分支结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、分支结构"}},[t._v("#")]),t._v(" 2、分支结构")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握分支结构的基本逻辑，掌握分支结构的实际运用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("分支结构")]),t._v("：即在编写代码的时候，考虑到各种情形，将不同情形的代码实现分块。在实际运行的时候根据条件选择相应的代码块执行（一般只执行一块代码）")]),t._v(" "),a("ul",[a("li",[t._v("IF分支：典型的互斥分支，根据条件选择一块代码执行")]),t._v(" "),a("li",[t._v("Switch分支：粒子分支，条件的颗粒度较强，可以选择一块或者多块执行")]),t._v(" "),a("li",[t._v("分支结构是编程中非常常见的一种代码结构")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定条件（通常可变）")]),t._v(" "),a("p",[t._v("2、设置不同条件的代码")]),t._v(" "),a("p",[t._v("3、根据条件执行代码")]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、分支结构是要提前准备条件和多个代码块（有可能只有一个代码块）")]),t._v(" "),a("p",[t._v("2、分支执行是根据条件选择代码块执行")]),t._v(" "),a("ul",[a("li",[t._v("IF分支（互斥）：最多执行一个代码块")]),t._v(" "),a("li",[t._v("switch分支：根据开发人员控制可以选择一个或者多个代码块执行")])]),t._v(" "),a("h3",{attrs:{id:"_2-1、if分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、if分支"}},[t._v("#")]),t._v(" 2.1、IF分支")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握IF分支的结构语法，以及能够运用IF结构实现分支结构解决问题")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[t._v("IF分支：一种可以接收任意条件的分支结构")]),t._v(" "),a("ul",[a("li",[t._v("简单IF分支：条件满足执行，不满足不执行代码\n"),a("ul",[a("li",[t._v("if(条件表达式){满足条件后执行的代码块}")])])]),t._v(" "),a("li",[t._v("标准IF分支：条件满足执行一块代码，不满足执行另外一块代码\n"),a("ul",[a("li",[t._v("if(条件表达式){满足条件后执行的代码块}else{不满足条件执行的代码块}")])])]),t._v(" "),a("li",[t._v("复杂IF分支：有多个条件，条件有递进性\n"),a("ul",[a("li",[t._v("if(条件1){满足执行}elseif(条件2){不满足条件1满足条件2执行}...else{都不满足执行}")])])]),t._v(" "),a("li",[t._v("IF分支永远最多执行一个代码块")]),t._v(" "),a("li",[t._v("IF分支代码块里可以嵌入IF分支")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定条件")]),t._v(" "),a("ul",[a("li",[t._v("条件是否唯一")])]),t._v(" "),a("p",[t._v("2、确定分支代码块")]),t._v(" "),a("ul",[a("li",[t._v("满足条件的代码块")]),t._v(" "),a("li",[t._v("不满足条件的代码块（非必须：看功能需要）")])]),t._v(" "),a("p",[t._v("3、根据条件执行")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、明天天气好，我就出去走走")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'good'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定分支代码块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'good'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'出去走走'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#结果：出去走走")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行时：如果$weather == 'good'，执行代码块；否则跳过")]),t._v("\n")])])]),a("p",[t._v("2、明天天气好，我就出去走走；否则我就在家睡觉")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'bad'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定分支代码块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'good'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'出去走走'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'在家睡觉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#结果：在家睡觉")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行时：如果$weather == 'good'，执行代码块'出去走走'；其他所有条件都执行'在家睡觉'")]),t._v("\n")])])]),a("p",[t._v("3、明天天气出太阳，出去走走；天气刮风，去看电影；天气阴天，在家看书；否则睡觉")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'rain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定分支代码块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'出去走走'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'wind'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'去看电影'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cloud'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP中elseif和else if效果一样")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'在家看书'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'睡觉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#结果：睡觉")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 执行步骤\n 1、判定$weather == sun是否匹配：不匹配\n 2、判定$weather == wind是否匹配：不匹配\n 3、判定$weather == cloud是否匹配：不匹配\n 4、有else，前面都不匹配，自然落到else中：睡觉\n*/")]),t._v("\n")])])]),a("p",[t._v("4、明天天气好：出太阳，出去走走；其他，去看电影；天气不好：阴天，看电视；其他，睡觉")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件：两组条件（大条件和小条件）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'good'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定分支代码块：大条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'good'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#天气好：确定小条件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'出去走走'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'去看电影'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#天气不好：确定小条件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cloud'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'看电视'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'睡觉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、IF分支是一种可以有多个条件，但是最多只会执行一个代码块的分支")]),t._v(" "),a("p",[t._v("2、IF在实际开发中根据条件的细分，可以有多种结构")]),t._v(" "),a("ul",[a("li",[t._v("简单IF分支：只有一个if条件和满足条件的代码块")]),t._v(" "),a("li",[t._v("基本IF分支：只有一个if条件和满足条件的代码块，同时还有else不满足条件的代码块")]),t._v(" "),a("li",[t._v("复杂IF分支：有if条件和满足的代码块，也有不满足前面条件，但是可以还可以满足其他条件的代码块，而且理论不限")])]),t._v(" "),a("p",[t._v("3、IF分支可以解决所有根据条件所有可能的情形")]),t._v(" "),a("p",[t._v("4、IF中可以嵌入IF分支，建议不要超过3层，太多层会让代码的可读性变差")]),t._v(" "),a("h3",{attrs:{id:"_2-2、switch分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、switch分支"}},[t._v("#")]),t._v(" 2.2、Switch分支")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握switch分支的结构语法，以及能够运用Switch结构实现分支结构解决问题")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("Switch分支")]),t._v("：一种接收颗粒条件的分支结构")]),t._v(" "),a("ul",[a("li",[t._v("Switch分支：条件是具体值，而不是范围条件")]),t._v(" "),a("li",[t._v("Switch代码块是写在一起的，使用case分开，而不是{}")]),t._v(" "),a("li",[t._v("Switch代码块允许执行多个（如果有必要）")]),t._v(" "),a("li",[t._v("Switch结构")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t满足条件"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("要执行的代码块\n\t\t代码执行控制："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t不满足所有条件执行的代码块\n        代码执行控制："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定目标条件：条件必须是颗粒度的，通常是一个变量（没有比较符号）")]),t._v(" "),a("p",[t._v("2、确定可能出现的结果：一个条件对应一个case指令")]),t._v(" "),a("p",[t._v("3、确定每个case指令下要执行的代码")]),t._v(" "),a("p",[t._v("4、确定每个case指令是否需要结束")]),t._v(" "),a("ul",[a("li",[t._v("结束使用break")]),t._v(" "),a("li",[t._v("不结束，代码会继续执行下一个case的代码块（代码块共享）")])]),t._v(" "),a("p",[t._v("5、确定是否需要不满足条件的代码块：default")]),t._v(" "),a("ul",[a("li",[t._v("没有：结束")]),t._v(" "),a("li",[t._v("有：确定default的代码块")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、明天天气出太阳，出去走走；天气刮风，去看电影；天气阴天，在家看书；否则睡觉")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#假设外部接收条件：条件变量为$weather，值为sun、wind、cloud和其他")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$weather")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#匹配第一个值：直接取$weather的值即可")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'sun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'出去走走'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#结束：表示switch完结")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'wind'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'去看电影'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cloud'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'在家看书'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#其他值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'睡觉'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最后一个可以没有break")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 执行逻辑\n 1、switch根据条件进入\n 2、匹配$weather的值：找到合适的case\n  2.1：找到：执行\n  \t2.1.1：有break：结束\n  \t2.1.2：没有break：继续执行后面的case指令\n  2.2：没有找到，进入default\n*/")]),t._v("\n")])])]),a("p",[t._v("2、一周7天，1-5天上班，6和7休息（共享代码块）")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件：条件是1-7，每次都是一个具体的值（颗粒度）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$day")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判定条件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件及其要执行的代码块")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$day的值为1，等价于 $day == 1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'上班'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定是否要结束 ")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#发现2-5其实是同一件事情，所以可以省去重复执行的代码块")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'上班'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'休息'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定是否需要不满足条件结果")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'没有这样的日子'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 执行逻辑\n 1、switch根据条件进入\n 2、匹配是否有合适的case，没有进入default，有进入：2进入case 2\n 3、进入case 2后开始执行代码块：没有\n 4、看看case 2后没有发现结束语句：break，继续向下执行，进入case 3\n 5、同理直到进入case 5：执行代码块，发现break，结束switch\n*/")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、switch是一种用来实现颗粒条件的分支结构")]),t._v(" "),a("ul",[a("li",[t._v("只适合固定值：case 具体值（内部使用 == 比较）")]),t._v(" "),a("li",[t._v("不适合进行大小比较：不能case 条件 > 10之类")])]),t._v(" "),a("p",[t._v("2、switch的结构如下")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：\n        代码块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        代码块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        代码块"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("3、break如果不写，那么可以实现多个case共享一个代码块")]),t._v(" "),a("p",[t._v("4、default可以没有")]),t._v(" "),a("p",[t._v("5、凡是switch能做的分支，if都能做；但是if能做的switch不一定能做")]),t._v(" "),a("h2",{attrs:{id:"_3、循环结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、循环结构"}},[t._v("#")]),t._v(" 3、循环结构")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握循环的结构语法，掌握循环的实际运用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("循环结构")]),t._v("：指通过某种条件的限定，然后某个代码块进行可控的重复的执行")]),t._v(" "),a("ul",[a("li",[t._v("循环结构一般包含以下几个部分\n"),a("ul",[a("li",[t._v("循环条件：判定循环是否执行")]),t._v(" "),a("li",[t._v("循环变量变化：让条件持续改变")]),t._v(" "),a("li",[t._v("循环体：要重复执行的代码块")]),t._v(" "),a("li",[t._v("循环控制：内部对循环的控制")])])]),t._v(" "),a("li",[t._v("PHP中循环结构有以下几个\n"),a("ul",[a("li",[t._v("while循环：不确定条件的重复执行")]),t._v(" "),a("li",[t._v("for循环：一般指定次数的重复执行")]),t._v(" "),a("li",[t._v("foreach循环：专门遍历数组")]),t._v(" "),a("li",[t._v("do-while循环：了解")])])]),t._v(" "),a("li",[t._v("循环控制：内部控制循环的执行")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、根据循环条件确定要重复的内容，选择合适的循环结构")]),t._v(" "),a("p",[t._v("2、确定循环条件的边界")]),t._v(" "),a("p",[t._v("3、确定循环条件的变更方式")]),t._v(" "),a("p",[t._v("4、确定循环体（要重复执行的代码块）")]),t._v(" "),a("p",[t._v("5、确定循环内部控制（不一定要）")]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、循环结构是一种让代码在可控范围内执行N次的流程结构（重复执行）")]),t._v(" "),a("p",[t._v("2、循环结构包含多种")]),t._v(" "),a("ul",[a("li",[t._v("while循环")]),t._v(" "),a("li",[t._v("for循环")]),t._v(" "),a("li",[t._v("foreach循环")]),t._v(" "),a("li",[t._v("do-while循环")])]),t._v(" "),a("p",[t._v("3、循环也可以在内部进行循环控制")]),t._v(" "),a("h3",{attrs:{id:"_3-1、while循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、while循环"}},[t._v("#")]),t._v(" 3.1、while循环")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握while循环的基本语法，熟练运用while循环实现内容重复执行")])]),t._v(" "),a("p",[t._v("提问：想输出1-10可不可以不是10次echo呢？")]),t._v(" "),a("p",[t._v("回答：可以，1到10是有规矩，找一个东西从1变到10就好")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("while循环")]),t._v("：在指定边界条件下，持续执行代码的一种循环")]),t._v(" "),a("ul",[a("li",[t._v("while循环需要边界条件（也可以没有）")]),t._v(" "),a("li",[t._v("while条件需要在内部控制循环变量")]),t._v(" "),a("li",[t._v("while循环多用来实现一些条件不大明确的循环")]),t._v(" "),a("li",[t._v("语法结构")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    循环条件变更"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、通常会在循环开始前定义一个循环变量的初始值")]),t._v(" "),a("p",[t._v("2、确定循环条件的边界条件")]),t._v(" "),a("p",[t._v("3、确认循环体（循环要干嘛）")]),t._v(" "),a("p",[t._v("4、变更循环条件")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出1-10")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定循环变量初始值：可以是1，也可以是10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、确定循环边界条件：10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、确定循环体：输出1-10")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$i代表1")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、变更循环条件")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图解析")])]),t._v(" "),a("p",[t._v("以上图输出1-10的整数为例")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%BE%AA%E7%8E%AF%E6%89%A7%E8%A1%8C.png",alt:"循环执行"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、while循环是一种利用外部循环条件实现代码重复执行的循环")]),t._v(" "),a("p",[t._v("2、while循环基本逻辑")]),t._v(" "),a("ul",[a("li",[t._v("定义循环条件初始值：1次执行")]),t._v(" "),a("li",[t._v("在while(条件表达式)中确定循环的边界条件：N + 1次执行")]),t._v(" "),a("li",[t._v("在循环内部实现循环体：N次执行")]),t._v(" "),a("li",[t._v("在循环内部实现循环变量的变更：N次执行")])]),t._v(" "),a("h3",{attrs:{id:"_3-2、for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、for循环"}},[t._v("#")]),t._v(" 3.2、for循环")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握for循环的语法结构，熟练使用for循环实现代码重复执行")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("for循环")]),t._v("：一种将循环初始条件、循环边界条件和循环条件变更都可以放到循环结构里（不是循环体）的循环")]),t._v(" "),a("ul",[a("li",[t._v("for循环需要循环初始化条件，但可以在循环结构里")]),t._v(" "),a("li",[t._v("for循环需要边界条件，也可以放在循环结构里")]),t._v(" "),a("li",[t._v("for循环进行循环条件变更，也可以放到结构里")]),t._v(" "),a("li",[t._v("for循环一般用来实现一些固定起始、边界和步长（条件变化的规律）的循环，多与数字有关")]),t._v(" "),a("li",[t._v("for语法结构")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("初始化条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("边界判定表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("条件变更表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定循环初始化条件")]),t._v(" "),a("p",[t._v("2、确定边界条件")]),t._v(" "),a("p",[t._v("3、确定变化规则（步长）")]),t._v(" "),a("p",[t._v("4、确定循环体")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("输出1-100之间的所有奇数")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定初始条件：1：$i = 1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定边界条件：100：$i <= 100;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定条件变化规则：1-100的整数：$i++")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定循环体：输出变化中的$i：奇数：$i % 2 == 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#循环体：找到奇数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#说明是奇数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("循环嵌套：打印九九乘法表")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印九九乘法表：一个循环要么打印一行1,2,3,4,5，要么打印一列（<br/>）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#而九九乘法表是一个表格，有行有列：所以单个循环肯定无法完成，需要多个循环共同完成")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#分析")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定一个循环：能够打印9行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9行其实就是一个换行符代表换一行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、确定一个循环：能够输出9列")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、以上两个是独立的循环，彼此没有交集：我们需要一行里就有9列，而不是只有一列：将能够输出9列的循环移入到能输出行的循环中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将打印9列的循环移入到能打印行的循环中：实现9行9列输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9行其实就是一个换行符代表换一行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、确定每一个单元的输出：九九乘法表并非一直输出，输出逻辑是：列数不大于行数，从第一列开始输出，第1个数为列号，第二个乘数为行号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n 1 * 1 = 1\n 1 * 2 = 2    2 * 2 = 4\t#第一个数1,2为列数，第二个数2位行数\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将打印9列的循环移入到能打印行的循环中：实现9行9列输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：确保列数不能大于行数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#有效输出位置：列号在前，行号在后")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出带一个空格")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"$j * $i = "是一个字符串只会解析变量，$j * $i是一个乘法表达式，会得出结果')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9行其实就是一个换行符代表换一行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图解析")])]),t._v(" "),a("p",[t._v("以上图输出1-100之间的奇数为例")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%BE%AA%E7%8E%AF%E5%A5%87%E6%95%B0.png",alt:"循环1-100奇数"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、for循环是可以所有循环参与条件都在for循环结构内部的循环")]),t._v(" "),a("p",[t._v("2、for循环结构如下")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   循环体   \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("3、for循环执行流程")]),t._v(" "),a("ul",[a("li",[t._v("表达式1：用来初始化条件（只执行一次）\n"),a("ul",[a("li",[t._v("如果初始化条件在外部，该位置可以空出")]),t._v(" "),a("li",[t._v("如果有多个条件需要初始化，该位置可以使用逗号分隔")])])]),t._v(" "),a("li",[t._v("表达式2：用来验证条件（起始到边界总次数+1次【最后一次失败循环退出】）\n"),a("ul",[a("li",[t._v("验证通过：进入循环体")]),t._v(" "),a("li",[t._v("验证失败：结束循环")])])]),t._v(" "),a("li",[t._v("循环体：执行重复内容（起始到边界总次数）")]),t._v(" "),a("li",[t._v("表达式3：变更循环条件（起始到边界总次数）")])]),t._v(" "),a("p",[t._v("4、for循环实际通常用来做一些明确次数的循环")]),t._v(" "),a("h3",{attrs:{id:"_3-3、foreach循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、foreach循环"}},[t._v("#")]),t._v(" 3.3、foreach循环")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握foreach的语法结构，了解foreach原理，灵活使用foreach进行数组遍历")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[t._v("foreach循环：PHP中专门进行数组遍历的循环")]),t._v(" "),a("ul",[a("li",[t._v("foreach循环专门遍历数组")]),t._v(" "),a("li",[t._v("foreach循环可以解析数组的下标和值")]),t._v(" "),a("li",[t._v("foreach语法")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数组变量 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("下标变量 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 值变量"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    通过下标变量读取数组中每个元素的下标（可以没有）\n    通过值变量读取数组中每个元素的值\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定要遍历的数组")]),t._v(" "),a("p",[t._v("2、确定是否需要用到下标")]),t._v(" "),a("p",[t._v("3、确定下标变量和值变量（名字自取：$k|$key，$v|$value）")]),t._v(" "),a("p",[t._v("4、确定循环体")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("输出个人的全部信息")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'name'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'鸣人'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'skill'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'螺旋丸'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、确定要遍历的数组$info")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、确定是否需要下标：需要")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、确定相关变量：下标使用$key保存，值使用$value保存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$info")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#4、确定循环体：输出信息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' : '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图解析")])]),t._v(" "),a("p",[t._v("以上述案例为例：数组有一个元素指针，默认指向第一个元素")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84.png",alt:"循环数组"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、foreach是专门用来进行数组遍历的")]),t._v(" "),a("p",[t._v("2、foreach是根据数组指针所在的位置挨个取出元素的")]),t._v(" "),a("ul",[a("li",[t._v("重置指针：执行一次")]),t._v(" "),a("li",[t._v("判定指针有效性\n"),a("ul",[a("li",[t._v("指针有效：取出数组元素\n"),a("ul",[a("li",[t._v("下标赋值给下标变量（如果提供了下标变量）")]),t._v(" "),a("li",[t._v("值赋值给值变量")]),t._v(" "),a("li",[t._v("指针下移")])])]),t._v(" "),a("li",[t._v("指针无效：循环结束")])])]),t._v(" "),a("li",[t._v("进入循环体")])]),t._v(" "),a("p",[t._v("3、foreach可以不获取数组元素的下标")]),t._v(" "),a("p",[t._v("4、foreach极少对一维数组进行遍历，通常是二维数组（多维）")]),t._v(" "),a("h3",{attrs:{id:"_3-4、do-while循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、do-while循环"}},[t._v("#")]),t._v(" 3.4、do-while循环")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解do-while的基本语法以及执行原理，了解do-while与while的区别")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[t._v("do-while循环：是一种先执行循环体（do）然后再考虑条件的循环")]),t._v(" "),a("ul",[a("li",[t._v("do-while循环需要边界条件")]),t._v(" "),a("li",[t._v("do-while循环在内部变更循环条件")]),t._v(" "),a("li",[t._v("do-while用来处理不明确条件的循环")]),t._v(" "),a("li",[t._v("do-while语法")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    循环体\n    循环条件变更\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件判定"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、通常会在循环开始前定义一个循环变量的初始值")]),t._v(" "),a("p",[t._v("2、确认循环体（循环要干嘛）")]),t._v(" "),a("p",[t._v("3、变更循环条件")]),t._v(" "),a("p",[t._v("4、确定循环条件的边界条件")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("输出1-10")]),t._v(" "),a("div",{staticClass:"language-PHP extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义条件初始变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#循环开始")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#循环条件变更")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意：需要分号结尾")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图解析")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%BE%AA%E7%8E%AF%E6%9D%A1%E4%BB%B6.png",alt:"循环流程图"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、do-while也是一种利用外部循环条件实现的内部代码重复执行的循环")]),t._v(" "),a("p",[t._v("2、do-while循环的语法")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("循环条件初始化\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t循环体\n    循环条件变更\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("循环条件判定"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("3、do-while与while循环的区别")]),t._v(" "),a("ul",[a("li",[t._v("while是先判定条件后执行，do-while是先执行后判定条件")]),t._v(" "),a("li",[t._v("do-while一定会保证循环体至少循环一次，而while未必会执行循环体")])]),t._v(" "),a("p",[t._v("4、在PHP中do-while基本不使用（了解一下这个原理）")]),t._v(" "),a("h3",{attrs:{id:"_3-5、循环控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、循环控制"}},[t._v("#")]),t._v(" 3.5、循环控制")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：掌握循环控制的基本原理和实际需求，利用循环控制实现循环内部控制")])]),t._v(" "),a("p",[t._v("提问：如果在循环执行过程中出现了某些异常或者某些不符合条件的，能怎么办？")]),t._v(" "),a("p",[t._v("回答：循环控制")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[t._v("循环控制：即循环体内通过代码对控制循环如何执行")]),t._v(" "),a("ul",[a("li",[t._v("循环体内控制代码的执行方向")]),t._v(" "),a("li",[t._v("循环控制是为了增加程序的健壮性，让开发者可以在循环内部把握循环的正确执行")]),t._v(" "),a("li",[t._v("根据需求（条件）进行控制\n"),a("ul",[a("li",[t._v("终止单次循环体执行：continue [层级]，层级默认1（直接进行下一次循环）")]),t._v(" "),a("li",[t._v("终止循环（循环结束）：break [层级]，层级默认1")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、循环开始")]),t._v(" "),a("p",[t._v("2、循环体内是否需要判定条件")]),t._v(" "),a("ul",[a("li",[t._v("条件满足：选择控制\n"),a("ul",[a("li",[t._v("确定控制层级（单层循环不需要）")])])]),t._v(" "),a("li",[t._v("条件不满足：不需要控制")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("求出1-100之间所有非3的倍数的和")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义初始变量（使用while循环）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#记录和")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#确定当前变量$i是否是3的倍数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是3的倍数：这个值不记录：但是后续的代码不用再执行（注意条件要变化）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#continue之后的循环体不执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#求和：同时变更变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等价于：$sum = $sum + $i++（后置自操作，先使用原值，后自操作）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("求出1-100之间所有的数的和")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义初始变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开始循环：条件永远为真")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#外部没有进行条件控制：说明循环是死循环，我们要在内部保证循环不会一直执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#已经不满足需求：循环没有必要继续")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果前面条件不满足：说明当前是满足循环要求的，继续执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("九九乘法表优化")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#原九九乘法表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将打印9列的循环移入到能打印行的循环中：实现9行9列输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：确保列数不能大于行数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#有效输出位置：列号在前，行号在后")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出带一个空格")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"$j * $i = "是一个字符串只会解析变量，$j * $i是一个乘法表达式，会得出结果')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9行其实就是一个换行符代表换一行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#问题：当内存循环$j > $i之后，虽然不会输出，但是内层for循环会一直执行直到$j > 9，这部分是无效执行：所以应当优化，即内存循环$j > $i之后已经没有执行的意义了（结束循环）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将打印9列的循环移入到能打印行的循环中：实现9行9列输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出：确保列数不能大于行数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#有效输出位置：列号在前，行号在后")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")])]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")])]),t._v(' = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出带一个空格")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#"$j * $i = "是一个字符串只会解析变量，$j * $i是一个乘法表达式，会得出结果')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#循环控制：进入else说明$j > $i，已经失去意义了")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前break是控制所属循环（j循环），所以终止也是当前j循环，进入到i循环执行<br>")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#9行其实就是一个换行符代表换一行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'<br/>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图示例")])]),t._v(" "),a("p",[t._v("continue流程控制")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/continue%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.png",alt:"continue流程控制"}})]),t._v(" "),a("p",[t._v("break流程控制")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/break%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.png",alt:"break流程控制"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、循环控制是在循环内部提供了一种可以控制循环的机制")]),t._v(" "),a("ul",[a("li",[t._v("内部控制，给开发者提供灵活性")]),t._v(" "),a("li",[t._v("内部控制，给开发者提供优化空间（省去不必要的循环）")])]),t._v(" "),a("p",[t._v("2、循环控制分为两种")]),t._v(" "),a("ul",[a("li",[t._v("终止单次循环：continue")]),t._v(" "),a("li",[t._v("终止整个循环：break")])]),t._v(" "),a("p",[t._v("3、循环控制有层级，如果在多层循环中需要控制到不同的层级，可以使用层级数")]),t._v(" "),a("ul",[a("li",[t._v("continue [N]：回到N层循环继续下一次循环开始")]),t._v(" "),a("li",[t._v("break [N]：跳出到N+1层循环，如果没有N+1层循环，循环结束")]),t._v(" "),a("li",[t._v("N如果为1，那么可以省去")])])])}),[],!1,null,null,null);s.default=e.exports}}]);