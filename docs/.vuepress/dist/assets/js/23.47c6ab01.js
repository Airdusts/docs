(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{388:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"函数高级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数高级"}},[t._v("#")]),t._v(" 函数高级")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：在函数基本应用的基础上，了解函数一些较复杂的使用方式")])]),t._v(" "),a("ul",[a("li",[t._v("作用域")]),t._v(" "),a("li",[t._v("静态变量")]),t._v(" "),a("li",[t._v("强制类型")]),t._v(" "),a("li",[t._v("可变参数")]),t._v(" "),a("li",[t._v("可变函数")]),t._v(" "),a("li",[t._v("匿名函数")])]),t._v(" "),a("h2",{attrs:{id:"_1、作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、作用域"}},[t._v("#")]),t._v(" 1、作用域")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解PHP作用域的概念，掌握作用域的限制和破解关系")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("作用域")]),t._v("：即作用范围，指变量能够被访问的范围")])]),t._v(" "),a("li",[a("p",[t._v("局部作用域")]),t._v(" "),a("ul",[a("li",[t._v("局部变量")])])]),t._v(" "),a("li",[a("p",[t._v("全局作用域")]),t._v(" "),a("ul",[a("li",[t._v("全局变量")])])]),t._v(" "),a("li",[a("p",[t._v("超全局作用域")]),t._v(" "),a("ul",[a("li",[t._v("超全局变量")])])]),t._v(" "),a("li",[a("p",[t._v("跨域访问")])])]),t._v(" "),a("h3",{attrs:{id:"_1-1、局部作用域-局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、局部作用域-局部变量"}},[t._v("#")]),t._v(" 1.1、局部作用域（局部变量）")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("局部作用域")]),t._v("：某个函数内部（函数体）的作用域")]),t._v(" "),a("ul",[a("li",[t._v("局部变量：在函数内部定义的变量（形参）")]),t._v(" "),a("li",[t._v("局部变量只能在当前函数内部被访问")]),t._v(" "),a("li",[t._v("形参只能在局部作用域使用")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、局部作用域定义局部变量")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#局部作用域")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#函数的{}内部属于局部作用域，这里定义的变量属于局部变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：未定义变量")]),t._v("\n")])])]),a("p",[t._v("2、形参属于局部作用域")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：未定义变量")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、局部作用域就是函数内部")]),t._v(" "),a("p",[t._v("2、局部作用域里定义的变量是局部变量")]),t._v(" "),a("p",[t._v("3、局部变量只能在对应的局部作用域访问，其他地方不可访问")]),t._v(" "),a("ul",[a("li",[t._v("函数外部")]),t._v(" "),a("li",[t._v("其他函数内部")])]),t._v(" "),a("p",[t._v("4、形参只能在局部作用域中使用（属于局部变量）")]),t._v(" "),a("p",[t._v("5、扩展：形参引用传值，本质是外部变量与局部变量指向同一个内存地址，在外部访问的是外部变量")]),t._v(" "),a("h3",{attrs:{id:"_1-2、全局作用域-全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、全局作用域-全局变量"}},[t._v("#")]),t._v(" 1.2、全局作用域（全局变量）")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("全局作用域")]),t._v("：即未在其他结构（函数）内部定义的作用域")]),t._v(" "),a("ul",[a("li",[t._v("全局变量：在全局作用域定义的变量")]),t._v(" "),a("li",[t._v("全局变量只能在全局作用域访问")]),t._v(" "),a("li",[t._v("全局变量可以当做实参使用（全局变量传值给局部变量）")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、全局变量")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认属于全局作用域")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局变量")]),t._v("\n")])])]),a("p",[t._v("2、全局变量只能在全局作用域访问")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：未定义的变量")]),t._v("\n")])])]),a("p",[t._v("3、全局变量可以当做实参传递给函数内部使用")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$a是函数内部的局部变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#100，当前是在全局作用域使用\t\t")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、全局作用域是在函数的外部作用域")]),t._v(" "),a("p",[t._v("2、全局变量是在全局作用域定义的变量")]),t._v(" "),a("p",[t._v("3、全局变量不能在局部作用域访问")]),t._v(" "),a("p",[t._v("4、全局变量能够在全局作用域下传入给函数的局部变量")]),t._v(" "),a("h3",{attrs:{id:"_1-3、超全局作用域-超全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、超全局作用域-超全局变量"}},[t._v("#")]),t._v(" 1.3、超全局作用域（超全局变量）")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("超全局作用域")]),t._v("：即脚本中任意位置")]),t._v(" "),a("ul",[a("li",[t._v("超全局变量：系统定义的预定义变量")]),t._v(" "),a("li",[t._v("超全局变量不受作用域限制，都可以访问")]),t._v(" "),a("li",[t._v("全局变量都会被收纳在$GLOBALS中")]),t._v(" "),a("li",[t._v("可以利用超全局变量来保存数据，让数据不受作用域限制")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、超全局变量$GLOBALS")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GLOBALS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GLOBALS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出100")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#打印很多，包括$a = 100")]),t._v("\n")])])]),a("p",[t._v("2、将局部变量保存到$GLOBALS中，也可以任意访问")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加超全局作用域数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GLOBALS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须先运行函数：执行内部代码才有效")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$GLOBALS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出100")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、超全局作用域是PHP脚本任意位置")]),t._v(" "),a("p",[t._v("2、超全局变量是系统定义，开发者一般只用来访问数据（不建议通过超全局变量来让变量跨域）")]),t._v(" "),a("p",[t._v("3、$GLOBALS会自动包含全局变量，同时还有以下超全局变量")]),t._v(" "),a("ul",[a("li",[t._v("$_GET：自动接收GET提交的数据")]),t._v(" "),a("li",[t._v("$_POST：自动接收POST提交的数据")]),t._v(" "),a("li",[t._v("$_COOKIE：自动接收cookie数据")]),t._v(" "),a("li",[t._v("$_FILES：自动接收文件上传的数据")]),t._v(" "),a("li",[t._v("$GLOBALS（自己包含自己）")])]),t._v(" "),a("h3",{attrs:{id:"_1-4、跨作用域访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4、跨作用域访问"}},[t._v("#")]),t._v(" 1.4、跨作用域访问")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解PHP中有实现跨域访问的机制，在必要时知道如何实现跨作用域访问")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[t._v("跨作用域访问：即在局部作用域访问全局变量，或者在全局作用域访问局部变量")]),t._v(" "),a("ul",[a("li",[t._v("在函数内部使用global关键字声明变量\n"),a("ul",[a("li",[t._v("在函数内部声明一个局部变量\n"),a("ul",[a("li",[t._v("如果当前声明的变量名在全局空间存在：系统直接引用")])])]),t._v(" "),a("li",[t._v("在函数外部声明一个全局变量")]),t._v(" "),a("li",[t._v("两个变量指向同一个内存")]),t._v(" "),a("li",[t._v("global声明变量时，不能赋值")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、定义函数在函数内部使用global声明变量")]),t._v(" "),a("ul",[a("li",[t._v("函数外存在同名全局变量：内部创建一个同名局部变量")]),t._v(" "),a("li",[t._v("函数外不存在同名变量：内部创建一个局部变量，外部创建一个同名全局变量")])]),t._v(" "),a("p",[t._v("2、访问修改")]),t._v(" "),a("ul",[a("li",[t._v("外部有：可以直接访问")]),t._v(" "),a("li",[t._v("外部没有：内部可以直接给值")])]),t._v(" "),a("p",[t._v("3、函数运行结束")]),t._v(" "),a("ul",[a("li",[t._v("内部局部变量消失")]),t._v(" "),a("li",[t._v("外部全局变量存在")])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、局部访问全局变量")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明变量：引入全局")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必须同名")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出100（说明内部访问到全局变量）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出101（说明内部修改影响到外部）")]),t._v("\n")])])]),a("p",[t._v("2、局部声明全局变量，全局作用域访问")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#声明全局变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n    \n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：提示未定义变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出10（说明局部变量也是一个全局变量）")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、global是局部作用域声明全局变量的关键字")]),t._v(" "),a("ul",[a("li",[t._v("global只能声明，不能赋值")]),t._v(" "),a("li",[t._v("global声明逻辑\n"),a("ul",[a("li",[t._v("全局变量存在：内部创建一个同名局部变量，并执行外部全局变量")]),t._v(" "),a("li",[t._v("全局变量不存在：内部创建一个局部变量，外部创建一个同名全局变量，并指向同一个内存地址")])])])]),t._v(" "),a("p",[t._v("2、跨作用域访问比较少用，一般要跨作用域访问的都是访问预定义变量")]),t._v(" "),a("p",[t._v("3、作用域划分的目的")]),t._v(" "),a("ul",[a("li",[t._v("方便开发者更好的管理数据")]),t._v(" "),a("li",[t._v("为了保证数据的安全（同名变量在不同作用域互不干扰）")])]),t._v(" "),a("h2",{attrs:{id:"_2、静态变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、静态变量"}},[t._v("#")]),t._v(" 2、静态变量")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解静态变量的作用，掌握静态变量的应用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("静态变量")]),t._v("：在函数内部定义的，可以在函数多次调用时共用的局部变量")]),t._v(" "),a("ul",[a("li",[t._v("静态变量使用static关键字修饰")]),t._v(" "),a("li",[t._v("静态变量是在函数内部定义的局部变量")]),t._v(" "),a("li",[t._v("静态变量在函数加载（编译）时初始化（只初始化一次）")]),t._v(" "),a("li",[t._v("静态变量可以在同一个函数多次调用时共享数据的变化")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、确定函数内的局部变量是否需要在函数多次调用时共享")]),t._v(" "),a("ul",[a("li",[t._v("不需要：普通局部变量即可")]),t._v(" "),a("li",[t._v("需要：使用static修饰成静态变量")])]),t._v(" "),a("p",[t._v("2、在函数内部对静态变量进行运算")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("当函数被调用时输出函数是第几次调用")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#普通局部变量：每次调用函数都会执行初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态变量：函数加载时初始化被执行（调用时不执行）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#参与其他运算的代码都是在调用时执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出1,1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出1,2")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图解析")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%87%BD%E6%95%B0%E5%8A%A0%E8%BD%BD%E5%88%B0%E5%86%85%E5%AD%98.png",alt:"流程图解析"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、静态变量是在函数内部定义的使用static修饰的局部变量")]),t._v(" "),a("ul",[a("li",[t._v("static修饰的变量是在函数编译（加载）时被初始化")]),t._v(" "),a("li",[t._v("static修饰的变量行在函数调用时会跳过执行")]),t._v(" "),a("li",[t._v("静态变量是保存在函数里面：所以每次调用时修改的值都可以被下次调用使用")])]),t._v(" "),a("p",[t._v("2、静态变量的作用")]),t._v(" "),a("ul",[a("li",[t._v("让函数在多次调用时能够共享内部数据变化")]),t._v(" "),a("li",[t._v("普通局部变量每次调用都会初始化")])]),t._v(" "),a("p",[t._v("3、静态变量的使用场景")]),t._v(" "),a("ul",[a("li",[t._v("数据需要函数多次调用共享数据")]),t._v(" "),a("li",[t._v("在函数使用递归存储数据的时候")])]),t._v(" "),a("h2",{attrs:{id:"_3、强制类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、强制类型"}},[t._v("#")]),t._v(" 3、强制类型")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解PHP可以利用强类型来规范函数的输入（参数）和输出（返回值），了解强类型的作用")])]),t._v(" "),a("ul",[a("li",[t._v("强类型参数")]),t._v(" "),a("li",[t._v("强类型返回值")])]),t._v(" "),a("h3",{attrs:{id:"_3-1、强类型参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、强类型参数"}},[t._v("#")]),t._v(" 3.1、强类型参数")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("强类型参数")]),t._v("：在定义函数时给形参设定类型")]),t._v(" "),a("ul",[a("li",[t._v("类型规范是PHP的8种类型")]),t._v(" "),a("li",[t._v("强类型的作用\n"),a("ul",[a("li",[t._v("实参必须是形参规定类型")]),t._v(" "),a("li",[t._v("保护函数内部运行逻辑正确")]),t._v(" "),a("li",[t._v("省去函数内部判定逻辑")]),t._v(" "),a("li",[t._v("提升解析效率")])])]),t._v(" "),a("li",[t._v("强类型语法")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" 函数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("类型 变量名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不限定类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出1（自动转换）")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强类型限定")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("add2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword type-hint"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'b1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：实参数据类型不正确")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、强类型是在形参定义时指定数据类型")]),t._v(" "),a("ul",[a("li",[t._v("规定实参必须传入相应类型：否则报错（致命错误）")]),t._v(" "),a("li",[t._v("保护函数内部结构运行正确")]),t._v(" "),a("li",[t._v("节省开发时间，不需要在内部进行逻辑判定")]),t._v(" "),a("li",[t._v("可以提升PHP的解析效率（不用转换）")])]),t._v(" "),a("p",[t._v("2、强类型的选择")]),t._v(" "),a("ul",[a("li",[t._v("PHP是弱类型语言，会自动转换类型，一般可以不用")]),t._v(" "),a("li",[t._v("不想在内部进行过多逻辑判定，可以使用强类型参数")])]),t._v(" "),a("h3",{attrs:{id:"_3-2、强类型返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、强类型返回值"}},[t._v("#")]),t._v(" 3.2、强类型返回值")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("强类型返回值")]),t._v("：指在函数定义时就规定好函数的返回值类型")]),t._v(" "),a("ul",[a("li",[t._v("强类型是PHP的8种类型")]),t._v(" "),a("li",[t._v("强类型规定后，函数内部的返回值必须是指定类型")]),t._v(" "),a("li",[t._v("想让强类型完全生效，需要提前声明\n"),a("ul",[a("li",[t._v("declare(strict_types = 1)")])])]),t._v(" "),a("li",[t._v("强类型返回值语法")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" 函数名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：返回值类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判定数据是否是整形")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("is_my_int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("TRUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'no'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_my_int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：返回值类型必须是布尔类型，返回了一个字符串")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、强类型返回值是在定义函数时规定")]),t._v(" "),a("ul",[a("li",[t._v("规定返回值类型")]),t._v(" "),a("li",[t._v("在函数内部使用返回值时必须对应返回值类型")])]),t._v(" "),a("p",[t._v("2、强类型返回值的作用")]),t._v(" "),a("ul",[a("li",[t._v("保证数据的规范性（对外提供规范数据）")])]),t._v(" "),a("p",[t._v("3、想让强类型返回值生效，依赖强类型开启")]),t._v(" "),a("ul",[a("li",[t._v("在脚本前面添加：declare(strict_types = 1)")])]),t._v(" "),a("h2",{attrs:{id:"_4、可变参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、可变参数"}},[t._v("#")]),t._v(" 4、可变参数")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解可变参数的使用方式和作用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("可变参数")]),t._v("：PHP提供了一种对于参数不固定的处理方式")]),t._v(" "),a("ul",[a("li",[t._v("PHP在5.6以后提供了一种主动获取多余的实参的方式")]),t._v(" "),a("li",[t._v("可以使用"),a("code",[t._v("...")]),t._v("符号实现数组数据的拆分")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、在定义形参过程中，主动提供获取不固定数量实参的形参 "),a("code",[t._v("...$args")]),t._v("（变量名随意）")]),t._v(" "),a("p",[t._v("2、在调用函数时传入的多出的实参会被$args接收")]),t._v(" "),a("p",[t._v("3、在函数内部可以使用$args访问多出的实参数据")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、求两个（可以多）数的所有数之和")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1、定义函数：对于多余的形参使用...$args保存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("my_sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#2、$args会接收多出的参数（$a和$b为固定参数）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#3、在函数内部可以使用$args访问多出的实参")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$v")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("my_sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("my_sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出15")]),t._v("\n")])])]),a("p",[t._v("2、将实参数组拆分解构成多个数据")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("my_sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("my_sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出6")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、可变参数是指参数的数量可以不确定数量")]),t._v(" "),a("ul",[a("li",[t._v("形参中可以定义可变参数，吸收多余的实参变成数组")]),t._v(" "),a("li",[t._v("实参专递数据时可以利用可变参数，将数据解构成多个参数")])]),t._v(" "),a("p",[t._v("2、可变参数通常用作不确定的数据的计算（数量）")]),t._v(" "),a("h2",{attrs:{id:"_5、可变函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、可变函数"}},[t._v("#")]),t._v(" 5、可变函数")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解可变函数的意义，掌握可变函数的使用")])]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("可变函数")]),t._v("：即一个变量所保存的值刚好是另外一个函数的名字，那么可以通过变量直接访问函数")]),t._v(" "),a("ul",[a("li",[t._v("变量的值是一个函数名（字符串）")]),t._v(" "),a("li",[t._v("变量 + "),a("code",[t._v("()")]),t._v(" 就可以当做函数名访问函数")])]),t._v(" "),a("blockquote",[a("p",[t._v("步骤")])]),t._v(" "),a("p",[t._v("1、定义一个函数")]),t._v(" "),a("p",[t._v("2、声明一个变量并赋值，值刚好是函数名")]),t._v(" "),a("p",[t._v("3、变量 + "),a("code",[t._v("()")]),t._v(" 访问函数")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、简单实用")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__FUNCTION__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'display'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变量名为一个函数的名字")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可变函数访问")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出display")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#$var + () == display + () == display()")]),t._v("\n")])])]),a("p",[t._v("2、实际运用：通常我们是将自定义的函数作为系统函数或者其他位置的回调函数（callback）使用")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#取得一个数的绝对值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("jdz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#求两个数的绝对值的和")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("sum_jdz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#利用外部的$func函数（回调函数）来实现$a和$b的绝对值求和")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum_jdz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'jdz'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出2")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("流程图分析")])]),t._v(" "),a("p",[t._v("以sum_jdz(-1,-1,'jdz')执行为例")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/php/%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C.png",alt:"函数执行流程图"}})]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、可变函数就是利用变量 + "),a("code",[t._v("()")]),t._v(" 来寻找匹配的函数名当做函数访问")]),t._v(" "),a("p",[t._v("2、可变函数执行逻辑")]),t._v(" "),a("ul",[a("li",[t._v("变量取得值（字符串）")]),t._v(" "),a("li",[t._v("变量 + "),a("code",[t._v("()")]),t._v("：系统自动理解为函数")]),t._v(" "),a("li",[t._v("系统寻找变量值对应的函数名")]),t._v(" "),a("li",[t._v("调用函数访问")])]),t._v(" "),a("h2",{attrs:{id:"_6、匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、匿名函数"}},[t._v("#")]),t._v(" 6、匿名函数")]),t._v(" "),a("blockquote",[a("p",[t._v("目标：了解匿名函数，掌握匿名函数的使用")])]),t._v(" "),a("ul",[a("li",[t._v("简单匿名函数")]),t._v(" "),a("li",[t._v("回调匿名函数")]),t._v(" "),a("li",[t._v("匿名函数闭包")])]),t._v(" "),a("h3",{attrs:{id:"_6-1、简单匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、简单匿名函数"}},[t._v("#")]),t._v(" 6.1、简单匿名函数")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("匿名函数")]),t._v("：即没有名字的函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("定义函数时函数没有名字")])]),t._v(" "),a("li",[a("p",[t._v("使用变量保存函数的内存地址")])]),t._v(" "),a("li",[a("p",[t._v("通过变量访问函数")])]),t._v(" "),a("li",[a("p",[t._v("匿名函数语法")])])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[t._v("变量 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    函数体\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意：本质是给变量赋值，所以需要语句结束符")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义匿名函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意分号")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出hello world")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、匿名函数就是函数定义时没有名字")]),t._v(" "),a("p",[t._v("2、简单匿名函数就是通过变量指向无名函数")]),t._v(" "),a("p",[t._v("3、匿名函数是通过变量来进行访问")]),t._v(" "),a("p",[t._v("4、一般情况下匿名函数比较少这么用")]),t._v(" "),a("h3",{attrs:{id:"_6-2、回调匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、回调匿名函数"}},[t._v("#")]),t._v(" 6.2、回调匿名函数")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("回调匿名函数")]),t._v("：指直接将匿名函数定义在函数的实参中，当做一个实参传递给形参")]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、自定义求一个数组所有元素的立方")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#求数组立方的函数：需要一个回调函数专门求一个数的立方")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("my_cube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$cube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("my_cube")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$num")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#array(0=>1,1=>8,2=>27)")]),t._v("\n")])])]),a("p",[t._v("2、使用系统函数array_map")]),t._v(" "),a("p",[t._v("array_map是一个系统函数，目标是对传入的数组的每一个元素进行相应加工，至于加工成什么就看回调函数了")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_r")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#array(0=>1,1=>8,2=>27)")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、回调匿名函数就是在当函数调用时需要回调函数时，定义一个匿名函数作为实参")]),t._v(" "),a("p",[t._v("2、回调匿名函数的本质也是在定义一个函数，让变量（形参）进行保存并调用")]),t._v(" "),a("p",[t._v("3、回调匿名函数的作用：匿名函数用后即焚，可以释放掉占用的内存")]),t._v(" "),a("h3",{attrs:{id:"_6-3、匿名函数闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3、匿名函数闭包"}},[t._v("#")]),t._v(" 6.3、匿名函数闭包")]),t._v(" "),a("blockquote",[a("p",[t._v("概念")])]),t._v(" "),a("p",[a("strong",[t._v("闭包")]),t._v("：闭包（closure）是一个定义在函数内，能够读取其他函数内部变量的函数（闭包函数）")]),t._v(" "),a("ul",[a("li",[t._v("函数定义在某个函数内部（内部函数）")]),t._v(" "),a("li",[t._v("内部函数是匿名函数")]),t._v(" "),a("li",[t._v("内部函数访问外部函数的局部变量\n"),a("ul",[a("li",[t._v("不能直接访问")]),t._v(" "),a("li",[t._v("访问使用use")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("示例")])]),t._v(" "),a("p",[t._v("1、简单闭包函数")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出hello world")]),t._v("\n")])])]),a("p",[t._v("2、闭包函数访问内部变量")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#错误示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#报错：提示未定义变量$str")]),t._v("\n")])])]),a("p",[t._v("原理：")]),t._v(" "),a("ul",[a("li",[t._v("outer是一个函数，$str是outer的一个形参，也就是局部变量，只能在函数内部访问")]),t._v(" "),a("li",[t._v("$inner也是一个函数，函数内部只能访问局部变量，而​$str对于匿名函数$inner来说是外部的，所以不可访问")])]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正确示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出hello world")]),t._v("\n")])])]),a("p",[t._v("3、闭包函数可以返回给外部函数调用出，这样可以使得闭包所占用的外部函数资源不会被释放")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正确示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出helloworld")]),t._v("\n")])])]),a("p",[t._v("原理：")]),t._v(" "),a("ul",[a("li",[t._v("函数outer调用结束，本要释放所有内存")]),t._v(" "),a("li",[t._v("outer返回了一个内部闭包函数的引用，所以函数不会释放到该函数")]),t._v(" "),a("li",[t._v("$inner内部闭包函数引用了一个外部函数的局部变量，所以outer也不能释放$str")]),t._v(" "),a("li",[t._v("$res('world')找到函数执行，并且应用了之前函数的局部变量$str，所以组合输出hello world")])]),t._v(" "),a("blockquote",[a("p",[t._v("小结")])]),t._v(" "),a("p",[t._v("1、匿名闭包函数是在函数内部定义的匿名函数")]),t._v(" "),a("p",[t._v("2、虽然闭包函数在函数内部，但是也不能直接访问外部函数的局部变量，需要使用use来引用外部函数变量")]),t._v(" "),a("p",[t._v("3、闭包函数一旦引用了外部函数的局部变量，那么外部函数执行完之后，被引用的局部变量也不会被释放")]),t._v(" "),a("p",[t._v("4、闭包函数可以被返回给外部函数调用出，然后在其他时候直接调用内部闭包函数")])])}),[],!1,null,null,null);s.default=e.exports}}]);